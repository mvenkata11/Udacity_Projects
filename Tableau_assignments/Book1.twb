<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (global-superstore)' inline='true' name='federated.1vhl0001tp6xs4121xz5n1yk8z9q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-superstore' name='excel-direct.1xcehm71k63onk19i66tt0appalt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Downloads/global-superstore.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Region]' />
                <expression op='[People].[Region]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1xcehm71k63onk19i66tt0appalt' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='City' ordinal='8' />
                <column datatype='string' name='State' ordinal='9' />
                <column datatype='string' name='Country' ordinal='10' />
                <column datatype='string' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Market' ordinal='12' />
                <column datatype='string' name='Region' ordinal='13' />
                <column datatype='string' name='Product ID' ordinal='14' />
                <column datatype='string' name='Category' ordinal='15' />
                <column datatype='string' name='Sub-Category' ordinal='16' />
                <column datatype='string' name='Product Name' ordinal='17' />
                <column datatype='real' name='Sales' ordinal='18' />
                <column datatype='integer' name='Quantity' ordinal='19' />
                <column datatype='real' name='Discount' ordinal='20' />
                <column datatype='real' name='Profit' ordinal='21' />
                <column datatype='real' name='Shipping Cost' ordinal='22' />
                <column datatype='string' name='Order Priority' ordinal='23' />
              </columns>
            </relation>
            <relation connection='excel-direct.1xcehm71k63onk19i66tt0appalt' name='People' table='[People$]' type='table'>
              <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='6'>
                <column datatype='string' name='Person' ordinal='0' />
                <column datatype='string' name='Region' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1xcehm71k63onk19i66tt0appalt' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market (Returns)]' value='[Returns].[Market]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B14:no:A1:B14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1174:no:A1:C1174:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Market]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Market,Region)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Market:nk]' />
          <groupfilter function='level-members' level='[none:Region:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.698083' measure-ordering='alphabetic' measure-percentage='0.301917' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (global-superstore)' name='federated.1vhl0001tp6xs4121xz5n1yk8z9q' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vhl0001tp6xs4121xz5n1yk8z9q'>
            <column caption='Country1' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market (Returns)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market (Returns)]' derivation='None' name='[none:Market (Returns):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[Longitude (generated)]' field-type='quantitative' max='33187653.413727984' min='-20265333.959950902' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[Latitude (generated)]' field-type='quantitative' max='24638580.360530384' min='-15599092.791611651' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <lod column='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Country:nk]' />
              <color column='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Market (Returns):nk]' />
              <wedge-size column='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[sum:Number of Records:qk]' />
              <size column='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[avg:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[Latitude (generated)]</rows>
        <cols>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[avg:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Market (Returns):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[:Measure Names]</field>
            <field>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Country:nk]</field>
            <field>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Market (Returns):nk]</field>
            <field>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Market:nk]</field>
            <field>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Region:nk]</field>
            <field>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Returned:nk]</field>
            <field>[federated.1vhl0001tp6xs4121xz5n1yk8z9q].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1866A19-BC49-4EA2-845D-9DEE68F5A526}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9acwk23ke9pze92+Zfe7CS16S4iVpkqJIWSIpS7YoMpYcgVFsy1ACLUDg
      JAYUBBbs2Anyw0iCSApiBEGUBIkFb7Ahy5YFGIkWa5coReKlZFEkRUok7yV5eWdfet+qu09+
      9Dzne+vtU9XV33xLz/R5gMH011116lTVOe++mE6nY0ulEgICAgICdguFUqmESqVy3vMICAgI
      CDhj5M57AgEBAQEB54PAAAICAgJ2FIEBBAQEBOwoAgMICAgI2FEEBhAQEBCwowgMICAgIGBH
      ERhAQEBAwI4iMICAgICAHUVgAAEBAQE7isAAAgICAnYUgQEEBAQE7CgCAwgICAjYUQQGEBAQ
      ELCjCAwgICAgYEcRGEBAQEDAjiIwgICAgIAdRWAAAQEBATuKwAACAgICdhSBAQQEBATsKAID
      CAgICNhRBAYQEBAQsKMIDCAgICBgRxEYQEBAQMCOIjCAgICAgB1FYAABAQEBO4rAAAICAgJ2
      FIEBBAQEBOwoAgMICAgI2FEEBhAQEBCwowgMICAgIGBHERhAQEBAwI4iMICAgICAHUVgAAEB
      AQE7isAAAgICAnYUgQEEBAQE7CgCAwgICAjYUQQGEBAQELCjCAwgICAgYEcRGEBAQEDAjiIw
      gICAgIAdRWAAAQEBATuKwAACAgICdhSBAQQEBATsKAIDCAgICNhRBAYQEBAQsKMIDCAgICBg
      RxEYQEBAQMCOIjCAgICAgB1FYAABAQEBO4rAAAICAgJ2FIEBBAQEBOwoAgMICAgI2FEEBhAQ
      EBCwowgMICAgIGBHERhAQEBAwI4iMICAgICAHUXhvCcQsDuw1gIAFosFjDEwxsBa6z4HBASc
      LQIDCDhVWGsxm80wnU6xWCxgrcV8PgcA5HI5LBYLlEollEol910ulwsMISDgDBAYQMCpIYoi
      DAYDWGthrcVisQAAGGOwWCyQz+dhrcV4PEYURY4xVKtVVKvVwAQCAk4ZwQcQcOKw1mIymWAw
      GDipn+YfDZqB5vO5MwWRIQQEBJwuggYQcCJYLBZOqh+NRjDGIJfLOale2/lzuZxjCtQE6A8o
      lUru3Hw+fy73ExCwCwgM4CmDlLattaduT6e0PxwOYa1FtVpFoVDAdDpFPp/HYrHAbDZzkj5B
      M1C5XHZ/G2NQKBQwn8/R6/VQKpVQr9dPbe4BAbuOwACeMJCIkqBGUYQoilAoFFAsFtHv92PR
      No1GA/l8/lQibejcHY/H7prj8dhdp1KpOKmec+b/pVLJMQ8NHjebzWL3GxAQcLIwo9HIViqV
      855HQEZMp1NMJhNHQEejkSOS5XIZk8nEEUtpYsnn8yiXyycWZWOtxcOHD52UL7UOACgWi87x
      q+3/jP6RxwOIzdta6yKDKpUKisViYAIBASeMoAE8IaC0vFgsMJlMMJlMkMvlUCqVMJ1OASDR
      cTqfz50kPp1OUSqVUCgUnPllU4xGI5RKJRSLRWf3XywWzm4/n88xnU5jWofUBDTxl4SdTMMY
      47SD6XSKcrnszEsBAQEng7CbnhCQiFP6n81mAI6SqmR8vYS1FsViEblczhFUqSUcB3TgNhoN
      Z/sHloS8UqlgPp8jiiInyXNePuItnb8cQ2oVZCzMI2g2m8jlQvBaQMBJIOykJwSTycRJ+rSN
      0wdAaKJOwkxbvR7PxzCyoFQqIYoi9Pt95PN5TKdTzGYzRFGE0WjkNBPOiSYozlkSfTIvagUa
      +XzeEfz5fO4YX0BAwOMjaABbitlshuFwiHq9jlwuhyiKvPZ04Mi8IiVpYNW0on0D3W4X5XIZ
      tVpt7XzIMOh7mM1mGI1GWCwWKBQKMcJMR7Au88D569BOPU9+x1BSjkVfQEBAwMkgaABbCIZv
      zmYzdLtdzGYzRzSTonmSEq0Iny3eJ3lTOh+Pxy62H1gS7/F47Ew+OlZfE3GtXejoJe389d0T
      75lmrEqlEhzBAQEniKABbCEo/ZNAD4dDZ0phTL1P4veBhFYmZckkLJpXSLQZVjqbzZxDt1Kp
      uOOiKEIul0OtVnO+iPl8Hhuf4+m5UZqnP0MzNUYoSad1pVJBqVQKBeMCAk4BgQFsEaIowng8
      diGPUlInkc3n84nO3jQC6TMBGWNQLpexWCwwGAyc45agWWc2m8VML5PJBPl8HvV6Hf1+32uX
      145anwbC7yuVissZoFObYxhjnPmrXC47BhSigQICHh9hF20BaGoZDofOmUowY3axWGA+n6NQ
      KKxI/7LIGs0rjPsvFAouOUz+nsvlUK/XXWgoibgmziTAtL9HUQRjDEajEYBljL4cP01S1/b9
      fD6PWq0Gay2Gw+EKA2IWMAvKkTFOJpPAAAICTgBhF50zWPaAxdCkeUZCEvu0MMh8Po9qtYpi
      segctTxfEuBGo+GYw2w2WzHhkEiTMYzHYwBw/ggmobVarcR4fwlfuKfUIJLMWvI8OpxpIgKA
      4XDooo5CGensmM1mGAwGqFarLmIrZF3vHgIDOEdQ8gXi2bFpIPGTNnQZKSOlZp0YVigUnNRP
      Is6QUt+mp9YBwMXhEyTIrPmzLqRUj79YLGKMT/9O0xQZD8eYzWYol8sYDoeoVCout4Gms2q1
      GgrIZYAxBrVaLaZJjcdjzOdzt0YCnn6EUhDnCNr2Z7OZI3RpTEBKw/J/yQC0nZ+gzZ7SPsM5
      h8NhYj0eGSUkr6ElRd4HY/bpr/BBajC6fIQxBsViEcVi0WUT83djDA4ODtDv91GtVgEsfRHU
      cDimMQb7+/uBgKWATn4dVcX3HRjo7iCEgZ4DKDlba1EoFJDP511ZhXXhnLKwm0ySInznM7qm
      3++7iCI5l6RrysicpLHlseuO4XE+BiLPm06nK4lrrDA6m83Q6/Wcz0COw/vJokntKrj2GGkm
      zWlcUwG7g8AAzgHz+Ryj0ciZQKiG+0oiaJBYFgqFlSJsWqIGEAvfpImIdnQgWePQRFkjKcRT
      f+ZYmtHI8WWBOoaValSr1VhuAjuIyev4chJ2FUnvj4EGwJGZTT/vLILISYHlwuU6tNai3+8f
      O1M9IDsCAzhjkMiTCFMT4P+5XM6ZQTRxltKz3riyxIKElIjp8GOC2WAwcDH2j3M/nJvv+6Rj
      10UMSRSLRWef1uUj5HUKhQJarVaoFQS4nA7C2mUdKUZzUbhg3SXpaxkMBs43ddqgM5pMaT6f
      YzgcujLjAaeL4AQ+Y0yn01jYJEMsm80mhsOhI+zS5k7wM6V/qSEkSWz8vlwuO4mv1+s5pqMr
      gsprJjmH9bz0Met+l/MiQScx9xFvPiff+USpVHLlrncVeq3oUFmafRhpxhyM6XSKQqEQ8wkd
      t+QGs8jz+byLLkoDq8oCS+Lf7XYdo2f+R0gCPD0EBnDG0ISL2ba058vuWbqdIglkpVJxqvN8
      Po8lT/nA6B8ArqQ0j9d1e7QZyWev9yWU+e7Rx0A0c5Bz8TGxfD7vLXMtnb7GmBgh2TVQ85Ot
      OBklVa1WYYxxGgGd9MzpIEajEWazmQsIeJzAkCRGngS+f2rBUsvt9XpotVrHnktAOgIDOEPQ
      bCGLp1FiqtfrrvAbgJgKXqlUXNevWq3mnKTrpGxgSSgbjQaA5QYjkdA2evm//JzVueu7V/7v
      k+A0I0kKg/XZgekfodTKhLddhEyikwxQmnzIFJrNpkuiYyRVt9t1z71cLrt8iuM6gxleehww
      NJn/A4hpKwEnj93cNecEEnsgnrU7nU4xn89Rq9XchmXdH4ZslstlpxZvUhKZZhGZcyDnQ+Kr
      Cbw0zfBvjaTkLxmuyr/TxpCO76xg7kGtVts6xy/zK5i1PZ1OT7WjGUN66Sgfj8fO5Md1JvMk
      ZP4GiS2bBJ3Xc5zP525vyLVIhhRwOggM4Ayh4+0lgYyiCJPJBFEUYX9/H9ZaxwxYq8fXRjGN
      uBaLRUcEpN/BhzQNgteRx/g0A1+OgGYM2gHs0z7WgUwTgNOMtgU0y1GrY/htq9XCYrE4cUbA
      3Ak2/JlMJiiXy66A32KxcLkTNDGyt4RMDDxvO/t4PF4RbKgxB5wetmfnPIVgBI7M2NWlDIBV
      Sdpai8Fg4H6r1WqpIXE+JsCWj7x2UtlneV3fuFJT8Zlz0s7zXUveq0wySzpXgxFUNGtsSxIj
      728+n7veCd1u1zlCB4OBC/mlCUbnLzDbWv+WBVJby+fzGI/HqFarK74dNgfiuuJzPE9Qe5nN
      ZrGyIL7w6ICTRWAApwhmqjIzdTweexO3uOBZaI0blJExw+Ew1vA9q4NW2oSZBSxD/rJsKhlu
      mWTL12Np6V8zQo55nAgP6QDfppIF4/HYmSu0f0eCFV8LhcJKlAyTAo9zT7lcDtVq1TF9hlPW
      ajU0m013XKlUcv4Tagfn7WRlIURqMvl83mnDdFwvFovQD+IUEBjAKaJYLMbi+9k+UUPbzHVl
      ThJMxmxLaJMKtQsd30/JU5dXkJ99fgCfD8B3vGQQPgcv/Qy6tATHlozE5z/gOcVi0YWxnhfI
      SGezmSP6tL2zrLWUrPU7KxQKK4KAzLg+LuQYrAarQbs/cFSQbxtAwaRara5oyEwALBQKOxvp
      dVoIDOAUIW2swFJ6ZfE1Gf7ok+BZ+57Eg7ZuWbXTZ2Ypl8vufx9kVAWJbVI5CTk/MgNN+GWT
      GU3QfYSdxwJINAFpyLDAwWCASqVybiULrD3KUi2VSk4r4/zomOaxzMCWz6Ner5/6/KUJJe2Y
      k5iHtUe1oI6rvTQaDQyHQ+TzeVffiQgZwaeHwABOGXITUvqiqQfwm1BoAiqVSrFyzj4nmSSs
      +XzeOf/W2dHTJGh9rhxPnycT1nQ+gv7MiBNtr84aJURCSrv/eZgDKP2TkdKZymcwmUzQarWc
      Q1bfByXzp82UwfDSJMEjDdSWGo2G830Bcc1YalRp6yVgMwQGcAKgpMdSxWlSFRkCiYFc8BxL
      2v/TykRTypN2XX6fNE8SJV+Ujj5PRh1JLUBK7PKzlIT5v7T3yzBD3r8eUzMYn+/Bp7WcFeR1
      yZClmYxmOMbULxYLjEYjFwGUJTv2SQMdyo87BrD0VdG8Jt+7XFvUFJjLEHB8BAZwAmCFSjpy
      6VTTBNUY46RXhuPpkg88hxVCmembBGOOOmQlxXGzeBoQD0VNsv3r3/k5yTbv0wrk+UkmHp8f
      QTI+Xwlqmhtkd7SzhGzLKSN/5D3KmjuM/JL+gqcRJ/UeKNTQVCrXUC6Xw2g0wnQ6dVFD2xQC
      /CQiPL0TAJO1GLXQbrdRq9W86jAlRMb1++LgjTEucoMbQhJBedxisXAagA/T6dTVGNLQvgD5
      Pcf3SWG+eyJh1uYi3xi+++D/vsxP+ZlZv+dpF65UKk6qB46YEjGfz9Hv99FoNFyClSZU1lrX
      Xe1pZQrHBX080+nUCS7UCsgYxuMxptMpms1meH6PgfDkNgA3uiZgtOvKxC0m29BOPJlMYk5Q
      WcuG/0sHMMtFM5wzTbJnHRc913XEn2NIgqttrZox8B+lcP4tQzp9Y0pok46eE5kkiSTnT4na
      WntuWat8j7xHqQXI73TynoQMEw2JTqvI5XIol8toNBqo1WoolUrOtyXX3Gw2cwmOAcdD0AAy
      gok6o9EI5XJ5JVlHhtYBcPXq9/b2XG/ecrnsooKoHWjCTbuxjNVPknaTiGgURd6mKvIY3/la
      6tbaCTcezSBpjCNJKstiRpJagzyW0v95VohkiQ7pyC6Xy+5Z87nR0ctyHr65Po3+gJMETaZc
      M9S65LNkpFxoZHM8BA0gA1g/fzQaxRypEuPx2OvQlQRvOp264lt685OAFgoFb+njNCmnWCw6
      7SOKIvT7/UTinwbNAEi4NDHm79IxJ6XiTQgzCamWhMlAdGz74xQqOwmQAcmaTdVqNSYQsGgf
      34VvjBDBkh18Vjo/hubRYAI6PoIGsAbWLqsT7u3txRyUegPT5k+7Lm2Uk8nEJbewFDNwZOen
      +YbH0PxDIpFU+E2Gfsr46yyF4rQErh29SfdIgifP1fkMaRFI2t/AzzqSyOcXYTTUeRd+M8a4
      6BM+j8lkEsv4pc2fTeu73W6wVT8mZrOZy4WhKVA2tqHQFBLFNkNgAClgyFm1WnUmFUp/OgSN
      0ghNIzwniiInHeqIGIbPkdAVi0VYa9FqtWBtvHqndp5KYiuJIktGHNcuKpmAJLQ6Jpvf8TmR
      kKcxEE3YtY/A53PgfbNDGhmsPO+sITUSaYPmfGneKxaLru9uaGzyeKBwxKJ2GjKfJCA7AgNY
      A9rjafbxJbuQKHGDswgYSxUDiGWvykQvTQQHgwGiKHJx1WQavizcvb29FYLCuu8Ml5NjSyT5
      D9Js9JrI829pvvEROR1umhThoxmOZpbD4RCFQgGNRsOVDThP8N0wLJQJfoz4oXbGxibNZjOE
      LR4TpVIptl9ocqSgEbSr4yGsRg+4uPL5PJrNpivVDMCFoUkwG5R2/UajsRLlQ+ch/QQMHbV2
      WVqAceO8PtvqpZlU2NlJgmYJJtSwmBady77uWnJMaabRph1J+HkP2legNQedJKUZTJKWoL+P
      osgRVN99nwfY9nA6nTrHsCREdFDy+QRH5fGhhYPRaOTyX+TeCdgMgQEIMJuXLfUajYZr0M4a
      O75knkKh4BpupG10Ga8vmchsNnPnk6Cwtgqdwgx9JAMqFoteaZKbg6n1UjLVTeT1PIDV0gsA
      YkRMm6Gk1uDTGHTLxyymEM1spBZEp9+2SHyTySSWtcrua8ByXezt7bl6/MH8E4fUIjcBC+8B
      cAJOYADHQ2AAjzCfz9Hr9Ryxk9EFtNXzs0axWHR293WbXEv11lo0m80VG7u1NhbJw+94vizx
      q1GtVjGZTJy24csRkPeSZJqR5p4kUw2AlQ2c5hiW3cfWOYz5WZqY+v0+jDHY29vbCiZQq9Vi
      zXYk8+fnWq0WCJQCw5XpU9OQ1VYlGFJN0JS6bk0F+BEYAOAcrlqCZeKJVu19Tkwp+aVdg4ua
      mgSJBn/XkULSbCKrZ7LNoNY2eLyUTDWS7PFyroxA8mkE+rMeW0f3SLNRmvlHzk1L/vLztiRP
      kfg0Gg30+/1Uze9JBLVJBjWcNMM1xiQ29NHx/gTnI9dJv993Gm8ws22GnWcAlESkA0/a+Uej
      kTMBEazjoxuSSKJGqVsuSJYLpv2SSWJ0NMtG71pylmMzOilpwRuzrPMum8f7TD36sz5GawBp
      xFuadnxOXx/DSNOY5PWYVEUziqymug0gI36a4vuttej1es5nxEqzJwVjTKpWROe5z2So16Qs
      Jigj4LbNXCghCySeJ3aaAdC8MBgM3IJiuKGMy5cviVKRxmKxiMV7065PAl2v11GpVGK1Tbrd
      rott5j8ttcsoGzqSAST6AAiGpAJYYSxpxNhnilpnr+c8kyCvJ/0JScfq+bH7l6yJtE2Elhrg
      0xKGyDXOaLV1PpuzANew3B9yXrJQnNQei8Xi1jS90TjvZwrsOAMAgG63GyN4ZACFQsFV+GQ4
      Zy6XW2lTp/v9jkYjJ70YY5wdv1KpuF6w0+nUMQlKMNZaNBqN2AKPomjF6fzw4UNUq9VMi5ob
      RppMeK8sqJbFnKIJm48Ia6bhi4rxjas3AZ+HZBSU+oHtTfR5kk0PNBnKcFYZLXYeZay1IMRW
      mpK4sy4Q96UWcmi+PcuqoVmFk23RSnaeAUjQ0VupVNDv9x1x7PV6KBaLLiqoXq9jNBrFCsPR
      js+cABJ5ggyhUqk4VZo2f4YTypr+wJHtWJpeDg8PY4lXaZBNNqy1LlO5XC474hpFkXMW64ge
      KWH5zD/yOx1VlHSu739tLpJaD89lg5V6vX6spiMBq+B7Y9FADZrdziqCydpl+PN8PnfZ8YVC
      Ad1u1x0jzZK+83VdIGrip90/ms9xPB67oA5WAdgGST8JO88AWLufDdsHg0GsFDMXGgusseyz
      dD5xnFqthsFg4KR+X9tHYOlXqNVqqFQqGI/HsTBQn22d0gwZxCYSDZkACbfuFVwsFrG3t4fh
      cOhUfiAesslNJ+2xST4EqWEk+R20P0M3gyFz04xDO5cDjg/6vpKqxRaLRVSr1TMrvUHhSTp5
      ZWCGFjKkJiCh829IiE/LDMQ50ZQMLCPVGBrO9Uqha9uw0wzAmKMIHBJvxuHLWv0EmQT9A9JJ
      BcCZeAaDgSPmZAZ0LOsoGWkyGY1GTurP5XJO6pXSMMtQbLIp02y4/I0lKXyJYmkRQ3osHi+J
      vGYmPJbH8VlItd1H/IGlLZiF2AKOD/Ys0CaLUqnk/F4n8YzTTCJ83yyZontdy/3nWxMaSQT2
      NM1XrBKsO8XJXhH0TTSbTa9AeJ7YaQZA8GXUajUYY1ysuV5ozBXQoMmCnaD29vYAwFWCpG+B
      EUA6sYr/j0YjjMfjGJPQ0i8dyydtBklzzEpkXbi+4/S9kAFLW24Ss5LfkVCcdwTFkwqa/TSB
      rdfrib0njoOkWH4AsfX+uNABDLKpUFLQw0mBa1hrUbItqpwjtZpcLucEmfNkBtunk5wjdMo+
      TRk0vSQ5IIvFogsNleNIlZVOVxI7aW6R4CLWuQASp7VgfGUlOKdNruubb1LnK71JZU0l/TvD
      cYfDoVOvAzbDZDLBcDh0mh6fL/1bJ7m2uH802MRoE+KvtUVgGR4sy6foJj3Aci+eZhQQhbsk
      UPOVfglWCe52u+fe0CaIUB5Uq1VX+oGOUklwSIj4cinhSEmHEpW0ccuKhWQKkvhpAqkZgTST
      nAY4/8FgsCI5ZY1u4LFp8ds6qU6Xx0i6Dn0w9Xo9EP9jwhiz0sOYIcUnLVikSbfHIf4scsi1
      RbNlLpeLac4E/V+naXvn9crlsoueItOTvaDpe2NEIfcY7++8tICdZgDSVq2dmiRKo9EoFvdf
      r9dXHKnyPAkp/TCnwJhlE3dKDbVazSWCFYtFJ5lJpmDMURYwm7+cBsjMGImxCXT0j6zdL6U3
      KdknRRTpdyH9LKzVtK3mn021pbOGlPwphJxllA+1D+0j0tfX64nzZX0rmfg1n89RrVbdPuI6
      JrE9CwJLgW8ymbh9rtc4j6tUKq4443n3t9jOXXSG6Ha7bhNo2yEApwlYuwyjPO4L09oDwZZ3
      JOoyC5lSv2xDeNoLxhjjzCxZrqPt+j6Gyt9lKQe9KdLGl2OOx+OtL60wnU63MlSVNnmiWCzG
      HJNnASnMAKtlQrRmx3fP3sDcD+Px2JlPNJGVoat00J6WwKD3arVaXfGt+LAtGco7zwBkA3eG
      eFJ64EtlfsBxwAgfSbh1tU9eB0iOWDirBChtQ80C3ot27nI8IL65ZWazPIaQUj//Z1o/mfC2
      QpoEtwmM8JKaHSXVs7i2DIeUpVf4u8/kCBwRUGoO9Xo9VhCO41arVZeEKe/rtO+P+1u+c2uX
      IeJnzVyPg51nALRXs8AasFQruaiyjgGsRqqwLsl0OnV+hdlsFnP8UBJgCQkuqPl87spD6I1x
      2jbNTQmslPil/Z9/a7ts2vy1z4DPQT6Pbd9U2zY/En/Zs5rJh2c5B9mfQkKbBZNA7UX6D7hG
      er0erF1202OWcD6fd132NpnnJntMCm/yu2Kx6OqIbfOa3XkG4HuBAJw0sW6TsDZ5Pp9Ho9Fw
      i1j3iR2Px7F2jVIals5gmUhWKpWcZBNFkTuf2gCdSycNFjfL6geQkr/P7gkkZ/9q5iGPL5fL
      bg4kHufdBexJBfMr+IyP40dKIo4y0EFej5ou/yYT0GZM/TnJZm+tRbfbXTEhAUeJazLPhGZM
      zpn7SvYU1gEJrNgru/mtE1h85iXe/2QyQavV2lqtdecZALBqlyRToBTvc/pSsgcQCz/jcTou
      mIRalzgA4OKBZTErNqJhrSJuYOCo4iEX10mbh2jG0H4AqbWwsik3mHa26SigJI3Apz3JyKBq
      terKV5x0mOKugc+ags2mz5JCTbPZjBE0n4Q9nU5jZhp5LV3QTQoHUojg7/xN7zESdvrwZDmW
      wWCQWOeK12fvbTk3OpFZB4z+h03WHrUc7hNaALYRO88AfIuX9mZK8JTQyShoqqFKzVaFXLjT
      6dSFKtLWKSt5yoVEPwAJOudTKpVif5MhUaXlGIPBwNsb+KSfkZbWySS16YcL3yfV6Xv3MQJ+
      b4xx2danEaO+S2DcPd/jcW3TNG0Q1MrYkIXvWYeZamLPY7UwpOekc2F8gQXAUbglW7f69pmG
      tdYRe/oMtJbKz4PBwEX/ZUGpVHIaiRTcthE7zwC03bFSqbjUdBI5qoWVSsVVHqSTmISP5p/Z
      bOYKa8kFNRqN0Gg0XOwyMwIp/TN9nIulWCzGCnTxe0o8hULBW67iJCAduUnajTSdyeN9Knza
      HNPsvrz+cDhEq9Xa6o20reDzI9aVEU8CzRkkiDSR6FLpTIhMMjH5GD0AFyghBQ0KEjQfJZlR
      WISN4+uCcEmYTCYxU5GvTAmxaRMiJoVScEkya503dp4BEMYYV6qZBI6LiS+fXbgYhSD79Ur1
      ulgsxhxuwFG0EWsNFQqFWHSRjP/novcRx3w+71o+MsSNG/IkncO8dz4b+b38n79LqU5Ld+sk
      saSxdYRUwObQGtdxbf8sWkjIhkhS+k8LnpDH8W9+R62a38u5017PMFa9pnzm203ujWNJbV3O
      j6GnWcejACnrapEubFsU287vLC6AQqGwErutiS9r+bCkgy4ABcDZDH3qorThS7MScLSIdYlp
      jdlshm636yQMMhZZD/1xoTeR3nDaFCQd2py/NhEBq89TS1lkOvw+iiJHsLZRetp20Bwj69Fk
      rfmkkSQBa/PgZDJxvbXp/NTvXRJ2+VlqlFIQstZmLgMuCXgWSGZDUy7/5hqWDuR1mM/nsVIb
      vAbNZf1+H51Ox/n2TkOD3wQ7zwCIWq3mmlSvU9mo6kr1VxJg1h9JWrC+6CJGS3ATzGYzbzN3
      aigklDwmzel1HOixfM/CxxSS4v/X9fLVkiDPGw6HW5lU9SRAFy9cp40lQTJm/k1NmBVyZcSY
      DMv0ZRn71o1cL7KWFj/3ej2MRqO1DGzdOkuD1iqkaVNqNWmmV8lE5LjSvEtaQdpVVyAAACAA
      SURBVKZwnth5BqClEd3DN+llUy0mtAROkxLHZUgnU9d1MTPJdIwxzrmmf5cLU24W2jLJOB5H
      spCMRdcrkkREq+pSYtL+gSSNQP+TTmTeL7WdgM2h14EWKrKcr58/bf/9ft+NR8mfkjJ9BdR2
      111DaxJyTUmTou88jU19Y3I9+85jXg4ho/UY7kkntC/PgdeQ+2o+n3trbp0lrLXBB0CPPbMU
      AThNQPbv9REwuZl8L5IlXxeLZY/hKIrcOTJJBDiqgknoGHxuAF1GmqFm7B/AObdarWOnv9NW
      zI0u46mzQJt1fOYi/i3/532SEcuWfmmOxSxz2RYT0lk6A5mbIk2EzEfJMgcSf0YQcZ3Jhu06
      XJf9K0gcgfSy3T4/07o5yeP1+iKyjqfXZtJ59P/RNMlnKusa0SeYNAb3vtTy+/0+yuWyCzA5
      K1i7zFbeeQagW8WRowNHlRN9NnEgbqvk3xpkKrSPSkmG2a0AnIrJqCMgbobxOcskuOlIQNlq
      8rjEhnkIdPaNx+NY3gPvKYnAysYu2s/h27D6bxIUakrHkZJIwLbFhMS8Ekaa0bl5WgzBmKOw
      TRIfalRZmIC1NlYIkd+RGDIxkS1T6QBmdI3U6HzQzttNsU5r2GTNJGWv8zMTMGXtf+kXkNK9
      z9fl+5tzZDgqhUUpKJ5W+RM6qneaAfgWnX7QNIFI52bS4hqPxyvROPIaeiOwhgjH01nCBK/L
      hh1UQeUmozQmF+disXAb9TgbzC2SQgGVSsWFqsrMzySpSZqmpO2YDMzao7A+jskS29xMxWLR
      bY7jMoDzrstDSZgbnUSVpgL2jT2tYmVkAiTWAJwtPcuzkVKt/Defz12uiiRYOiEwyeSkBYST
      0NR8pqRNztPz0GuOrR71uUnHy2PWMSVddVg+w8lkglqtdqKCTKFQWFoJTmzEpwSlUmklttkY
      E8tslJCLjAQzqbOS/pthoZSe6vW6swvKMFAuGhIQdheTZiItVVNVJaE5jqTJeTBsVZ+vi9zJ
      85KYgvxdO/5IKKkOS+fbcdTj8w4fpUYmtadCoeDsx5LZnWa5AGOW/ihpQuOa9jktCb4D7d+S
      kr0mujrLV/4vz9fE/zimsaR1dhwmktV8JBlakqDmI/JJz8I3ltY+KDQcJ3s7CXzngQEoSJuz
      lPqJdZIKbWuVSsXF+UsJWCOKolhtHxIIagM6J4FMoFarOeeTnI+eVy6Xw2g0ipkDsoK230ql
      4uZD+7xcnD7mI5Fl0fIYmYHNHglnXbjscSBt37lczrUFJeikH41GrkAgBYDT9A/4iCVr9bBp
      iu/acr1L4saSzL7raOigBJqKmAy5yX2vI9QnQfzlfs2inUiBTY7h2+9J97pOWMwC3SeBFQ3S
      ntlOMwBrj8IMpSRLjz6QrtoR+hjZ2AU4shVWKhXnYAbgStdqIloul10tHpox+HKl861SqWA4
      HKaGvZGB0KSyybMh05F+AOnkkpnC0nm7KXj/HIuLmHkFp9UA5zTAOjTyHuTaYFXOWq3mkgXn
      87lj5LVa7cya3XAOg8HAOfxlWRPeDyGJGt85sJ5YSULK98ueE9sIOVfON+keZXE7rdEAfoJ/
      XG2HFU65L2SC2mKxcPWLGo2Ge7bSFMvnLrX5nWYAAFxGrSz4JCN20l4U7djNZtMVfaJELwkh
      CSfNPcYY13WLDjRqC9qEQ6cQbYAktIzmoMaQBq1SZkW1Wo0VxZJjJY25ia1ebjJfhUhmS29T
      5mQSaMph/DvNJnIDAsu1wJLF9XodN27cgDEGe3t7KBQKGI/HK1UtNwFDjOUYScjlli0TmVhI
      HwH7YbBMeb/f9yYaytIfWebKY9mX4Ljr8qywiQ8hKThDCgJyzE3vmbRC1hTj+NIHyLwLmlR1
      LSKa/crl8pJ+ZJ7BUwxrrbO9V6tVlEoltFotxwCGw2FiaWRGq9AcQzPN3t6ek5758mezGer1
      emws+RsZEQmGtBfTjMOeApy3DE1LQhYtxndOsVh0tukke63UBvTvaY41n0lCjpnP51Gv158I
      4k+JTBLJ2WyGdruNarUaKxMOHBFeOrgvXLgQYxBU32Wnuqzg+caYmAlSalZy3gxVlqYqBhCQ
      +bJRkhYEWN6A5U18a1BKwzIiqN1ux6TmNKTZ1PUxSd/L35LWo1638ni55uWYUgLX71iOLcO4
      fdpBkqagoc1pkshbe9R7hD00fOMwW3k+nwcGQDDKZTgcuigJa63bvL7jGSHBCBYWaJOSTj6f
      jznL2GyGFQyBoxokDN2kyUMuCpoJGAlQLpeRy+VcRrIxJlETYBLapiAT4FxkmQp5jI4KIvi9
      NHnp+wJWnbVPEvHnZgKOuraxZg3/7vf7K3kcxWIRd+/excHBgcu5oH+H6j6ZSqPR8JqF5HMn
      WFlWrqHhcOjs7lKDHI/HrseuJqAsOVKpVJxGLAn8ZDJBo9HAYrFwvTNo19eE08d8dCXZJPiI
      dRo0UdX35fsu6XxC+wXk9/oc3z357p8mnHXMT5dV982ba4vvgnRGHqvNq8AjP0Hq1XcILGlL
      Dkvu2e/30Wg0XDQNCTptuXyJs9nMEVkuCOm4HAwGbjNZuwwJlLHHvJ68vlT1qLbxs7wGNRUS
      Hg0ZZ7wpOFdKhXoh640h70l+L+Fb9CSKZKRPAqQdnIS20+kAWL7Hw8ND9Ho9zOdz7O3tOdNM
      FEV4+PChIwI0GfqcqvP53K1BbSajwEKNgqGdXHcM0aRUOJlMYjkmlBhl3L68N96TT8MkQyDT
      khFhUoL2+ac4Tzb8ofmCc9HPGFgfRaMJb5Z16FvPMunTN37S2s3ynURWBijnkZVxyffp07il
      RvNk7LQzgKwjTnBjybK3XNCMjaevgIvYF1ZH5wtj6hlhxHO4wUgEZUYvIecgVVUW3mJECbAa
      ey038qZtFckApEqpJR/fZpE27CR7J81XJFpZzAHbBBJRJna1220AwN7eHgA4DZKETZr3ALgs
      6729vRUzoyTIdPDxHfN8ahgURhqNhruuLNMAHIUQy/GBZa9dyVj0uzXGOPOjfjc0/5BxyTIQ
      lDa1bZymTVl5l2bTLDV8sppK5L3ov9dJ9FmQZsPXY/sk+CzXynqf1LKlL8I3P6lN8F9gAI+Q
      VG+G9lhK5STilOSYkLVYLJwfQXb/ooRH9ZtOZ9pQfYsxn8+vREhQ4pJt7LSjmsk5Sck3zGNg
      THiWRUgfBDUgGdWiiZSsA6TLWWu7Kh28WdTgbQW1wV6vh36/j1KptFIimaaXTqfjtD8AjnEM
      h0M8fPgw1dzFjTsYDDCfzx0j4W+FQsExA+arcF0k2a4BrKxBvp91Jjr9nSQ8GvKdc2w6MnXJ
      dA0pwcqx1pmCZDhkmnTui2Ly3atkaEnE1XcO/1/HKNb9ruftO07ei/ys71WOExiAQBJRk9ER
      PI7Suy92W9rfOA4TvmTpB71A+PdwOPSaaqiuy1BOEls66kigNfPQC4kSfRZNgNqNbzP6TAZc
      gFri0RvnSYnuWQfG9c/ncxeBYRYRUCi5jUkTCSGfh8+vAqyuR/6jOYdmR2utC1yg5E/GI7O2
      5ftKMuPJz5px6HXSaDRcvowmjD5/kLy+Lq7mm4eUUpPm6WNWcp1KiVc/Y9/cfPZ23zn62Wjm
      KX9PGi/pnacxOL0mYoRcWCjIrPQ58n9+HxgAlg5dZtdmjU2mzT9NgpWLQVYP9EEuQqrcciFQ
      k5DI5XKuHSTnQO2i2WxiMBh4Mxettc4noUNWffNi7LGUJrTUKOuop8Fau/aaTwqk063ZbMIM
      bsP87v8C3PkM0LwOvO8/R+7qe5yU7lPpKREnERG9BiRRp1mQTlhdm4Zj+4gKryUjReT1JePQ
      BKdUKsV8FvI3n/SpsS5iLWkMH9H1MSc+T30P0l+jGUxSLSB5XV4viYH6mFXSM9D3oqHNNb7r
      +a6V9sz0b/P5PJSDbrVaLmzK2mXjCRlBARwxCCC+KOlc9UFKW3JTSTu6bxHIRSoJdrVaXWEA
      lLY4DhvW8H54b/J4SWCGw+HaUsu0Oaep0vp+0kCTSJZjgXgkie+3JIZ6FpCmFmPnML/x92C+
      +lsw44cwdz8L8yv/NUzv9cQwTkl8eI/SHyI3Ld8zszuls3I+n6PT6bgIHBlxJK8lwzCBOCGR
      64gMXa4VmSjGaJ/RaOQYEsdLelebQo6Ttvb0b5II+hyt+n8gudpv0vU0U9S+DnmMfIby3nic
      1lb4vc4f0efyHGnake99nZOZc9ppDUAvdF9zaGOMc/bK7kr8PQ3FYhH1eh2j0SgWluWTOrT0
      QBUbOCoRkUY0F4sF+v2+MxPQxs/zGOYqC7rJyKIk0FHHeUlVWc87CXym+Xx+40xXWQpaSnbG
      GFdSQSbxnRWsPSoLXCgUkB/eBO5+LnaMmXZhb3wS+Lpn3Dk+aZURMaPRyEUK7e3tOR8PJWaG
      x7JEM/09PtOAJDy+6657f/p7Mql8Ph+rh0+GQlOWJDxZtIGkOSXNWx7nM8nIY5KkeN93cs6b
      5F1QCNEMVP6exsh0sISeWxI0E9I2/qTnJwXTXC632wxAQi4CWQYCgIugYcw0/143Hu3cvoUm
      xyfHl2qfrCezSdQOx2OIHsPz2PKy3+87RiYdyklgRU45tnYcrnsWjILShfbWgdEvAJzzU5a+
      IFE6j6bxtGNPp9Ol079QBnJ5YKHMG4WlUFEqlRzTlSiXy7Hs4H6/73pFVCqVFSI+HA6dqUeW
      LZfHSWk0LWxX+wd871ETM19pCN/6zkr0NdKIqb6mvtd1SGN2PiaadUy5xyXTS2PA8vnL+1g3
      j6R3lTZ+2h7feROQ5J5M6pIF1iihWbsMh2RSlVbpfKrlYDBAp9NZKacrry3HoJQrcxLSCCaj
      kjhnvuhcLufMO5RQSHxI9CuVykovBB8Y7uqbr1ZBNWq1GhqNBmq12rFKHpN5MVyU/ZjlpuKG
      YI/Vs4J26qJxFXjThyFnYPdfAJ77IAqFAq5evbrCpMioGcYpHfNaOKDNnT4HDU145XNy81HE
      Ra7ZpDElEUsiOjp2XkvUaSYIPXYWBsK1p+eRNKb82xfQoNdTVjzusdw/OkkwSYPwnSvHl+dK
      wdH3HIigAQDOnMDPmphT+h8MBms3IEEC7iP8vvPIYAC4DF+2jfOZOCj5+sIzy+UyqtUqut2u
      WyRSqpQ5C1meTaVScXOT802TLAqFgotMOi7oLNa2Zl5fzof3fxZaABmvnIe1FvjmHwEO3gTc
      +WPYxlXgpe+BqeyhXC67UglaYrXWupIfOs2fa4Kd42iD1+tP/i0lyqR159MOsqzPpL/TQiel
      lpGEJNOHz3RCoUxqgWlrTBP3JJNIFk02bd5ynCQmpn0zMnAiyVTke+6a2aYhSeDk3zvNAChV
      5nK5WDq7fBkkwlTzcrmc6+aUpE7zQTebTVhrXVx/Wrs4CdZWAeDyC1igi+dLIqRjgKn2VSqV
      WDu/TqeDvb091Ov1jZ6T3Dy+2Omke3hcYmytTXxmmrBkzWs4CdD5yz4JnI8xBZi3/1XgHUeb
      tfKo6qWdTYGv/hbM7U/DRAPYxjXgxe9Ao/lMjJgR1H4mk4ljAiz/4dO6JCHkOk0yPxDHkWB9
      xFpeQ9v9k7Q+n9lF30cWhq7HkfBJ+ie9RpKYl+84/QylKYta2zrzV5ZrpV1f1vUKxeCAWCjb
      YrFYsf8TLEtMwsaetczaleYIvii2kWP0Dx2gsneqRlL7N5qfqNaxZtBisYi1nez1emi3224h
      acl4NBplMv1IGGNcmGxWPE47SoJMzNrVxuRyo9AsdxqbmyY0mlRk0TcKA/p4ifF4DHS+CvPr
      fw/m/ufd9waA/dQ/At7zQ8i/+/uxsPENznR+Fo2bTqepVV/l+waOhAGuycfRxJKgzSyS8fA7
      d7+ed+NjIFmRRaOQxDXNnCQ1pk20ALnf15mPkjSprOdlFbwktIBKmkWzbrFYDAxAQquKkkBL
      7YBx3QwdZUSEdI6yk5LctLTTM6af5wGI2f9puydY37vf77uy0MYYF+IpFwVD9Hy2TgCxJtab
      oFKpoNvtZj5+Pp9v3IAmCSylLatt0sZ5WgllfK+TyQR2MQcmvaWDt1BBrtRwJr60KKpcLgdM
      ejC/+t/APHxl5XezmAF/8A9gS3WYl/6yu7dms4npdIrhcOicx2nIQlw2NW8kIUna1r+nHZME
      bU7KQhh912REFYCYNuEbM0na3mTO8v+kvUUTpjRhkShLJp1mskubpzYh6ePk2BRAAwNQKBaL
      aDabLsxNgmGWDKOkyQhYfeDlchm1Ws2F9fE3Ovz0YiyXy64NInAU7tfr9VCv11EoFFxNGarU
      sjibLDpHMwEzQgG4UFQuEvah3QRSwkyyUfKzLEh2EmCDemZmUxvbNDoqK2gajKZT4LWPw/zx
      vwbufx6YjYFSE7j6HuTf/f2oH7zoNTMw12EymQBf+Dkv8ScMLPBH/wx400dgSk13X6wsq30v
      8jpuDI8ZREv9SQwgiz8rDY/LZLRpxGez3mSOfPYUGGStriQtREv+x9UufPP0+Vt4vjZ1pb1j
      37zS/DISvkgwCoiBAQgwmoZSnWyDSPWfhJPt9HwLmM5P1sPR4/lelHxJjHppNpsxE5Ik2izO
      pm2slDCo7hljXGw553wc4mzMMqxVtzj04XGdv75rA0damP7+JEEGGU0nML//fwOf/mcwVpi+
      RveBV38FeP33gA/9XeAN3xrbqLlczvl+AMB85dfXXtMM78Le/SzMs9/scjWoYei5Af4NnyTZ
      Jv2tx836LH0EOss1fEjLE5DmC02c064rq6dSy+52u15CnXYvGj6zlkbSGJL56BDdND9NEjNc
      xwiS5iPPdWU8Eu9mR6ClN9rQmUlLe7kxy/IK9APQ/OMbh8k7tJlXKhWvqYA2Xjbu0L9R/WfH
      Jl6Hkj8Zg3SgSQmUTmNKkrVazXutLDDGePMG5MaiWeo0+/dKE91pwPkbXv014I/+aZz4y3lM
      +zC/9T+sZPrKhDUAwPB+tgs/Ok4W/XO1hYStWRPNk3gOp/Us05DEzDR475vYwOmgp8aoGeXj
      3K+2yWc9R++T485DmosYLp4mCPjOZ0ThYrEIGoBU5QhrlyGWjUbDmWaosvX7/Zgj1tdMg802
      CLZ9lNcEkDmDlSYiAM6vwC5Ocm40jcjSFSwvTZuylE6P86zoY0hCkqr9pCCKImA2gfnDf7g0
      z6TAREPg0/8c9gN/y33HaCT3DKqHQO/19ReuHrqPXF8UMpKe50k+Z8lkTnrsLCCR18SRxC7N
      Ru6DMcYFacj78uUqZB3vOFh3neOO60yMG4zD8HA+T2N2PAxUQpp6ALjkGwCxRLAoilCv1530
      LfMH5FjyO0oi8jvWUl/34lg+QYL1YPgiF4uF6/XJQnJkGDy/Wq26+R7XaUqtRNZu9/kAnmTM
      ZjNgcBum/Wq2E268DGNXm4i47mdv+HPAnU8j7S3bygFw+R3u+c1mM2dG8wkoJ43zYNh6v2iJ
      Wu5H/WyzQPpOpOStTbZ6LlmxabkIXkeW1Fh3fe43Rg5Kvx9zhbRpyDcmS41In5kzSW143089
      aLNnaj5w1GibjtRer4dOp7NSJlr+43fyN4njxq3LePAkGyYbzmvb6Uk4TXO5XCyMVI93UpE/
      5wVrbXazDQBMB0vnMFYTq4rFIvDWfx/YfyH5eiYH+54fBCr7zmTHvr6MdJJ2YklEpDPPt8ay
      4HHt+JtCS/pAcjE26chel3Wux5e9MijMJRF+X5KhZhQy0VJ+r585j5UCktYCfM/YRz9osmUD
      d2uXlXRZARhY31mMPSqSLA2BATyCfIiyxjvb6LH+Dx3FLK8gVVb+Y5gm/Qj64cvuXseZp5a2
      aY6SC7rT6bhuYfJYag+PAzbEYbSTZAZPSjtHAM6xL2GMASr72Qcp1oBCeWUsrgOUm7Af/nHY
      iy+tXr9YA97zQ8DbPuYip8rlsvPZyKJrvrknlVnQhIv/1jGJk/Qr+JiS/iy1bd81tVlqk2vp
      cfT1037Tzy/pd/38pcCXdMy62jw8T1aF5XnFYhGNRsNZIwAk0iEAmcq9PDm79ZSgXxolrG63
      u5K2rzeRlmCsXVYUbTQa6HQ6Tn3T0UInUbmSxDYtOYjzGo/HTuMgMXgcQu2I2yNQPc1SXG6b
      wAQ+aRIrFAqYNa/Dtp6F6X5t/SCX3g5r8rCLeSwCRTpyR3gG9jt/AvbGyzCvfwKY9pd1gl74
      NqD1HMyjhDe5gVnam8mDLIon1+g6Yu2TTs/Dtk/4TDGU8hmxJom+TGLMWk5Cm3zk75LhyON9
      hdjkedoEtY4hyfV0nOets/45DotRUrCT86dlAFjWIGMwxrrr7zwDIKTaJ9VOuWn4v6zJrn8n
      MeSYjFvXGsBJYB0D4D3JDmOsENpsNh+LGMhzZXLaediTjwuG20oUCoWlRP/O7wN+58fTbff5
      Muy7vx/A0fNgxi6ZPCOiZrMiZm/4FtjnPxQfw1osHjEOY4xr6MN5ySxzXkfbx5MIUhIzZvDC
      aUJKrtp0I+dOX1rS2smSUe7TirNA710fw5T3or9zfp6U83y1m5LugWCrVP37YrFwSZ7UEMi8
      uN6stS53KMte3HkGMJ/PXW9Xqa75JApgyZ0bjYZ72Cy7LFVF9jpNKhx3HFutbwwZaZQGqdKy
      BMV0Ol3bCyAr1qm124akdwvAhddN3/qXgIevwH7uZ7zRQDZfhv3A34I9eHHFPqw1IRl2J2P7
      ZftP3SWL6ympfaKPKSTdp0SpVEKlUnEaxWnDJ0Dxs74vrS1sUupZQzIZfW3+LbNztXbks/f7
      xtHzk++CY9Ivps1U1WrVVQyQtIJtPyUWi2VpdOb+SBok5yWvlwU7zwDkC9VOPPmyKOFWKhVX
      G4abVi7ker2O4XC4ItXI8WRz+eNKzNQs9Nh6EY/HY+c0pnOYn580k83jgs+IiVa+fAW+48Vi
      gdmf/S+Ai28D/vingfZXYOZT2GIVuPxnlo7bK+9CsVCIRXgxzI4gs5Xvy9qjpj1JkO+R5jpd
      LXTdffpQrVYzVU71ETbfMZJAJplcfBK6nIMm0loIk+Ok2erXmWl8pp0svyVh3bsgoZbRXL7r
      zmYzV/mWFV/1dai50/x6HI3HO8fHHuEJR1ZzDKW46XSK8XgcW+B8qWx6wqgh+Tvrfli7LDMw
      Go2wv79/bFs8tZakzUGMRiNXS0eWh2Cy2klpAdsMEtxCoYDBYABrl+W9k2DMMut5nMth+pa/
      CPvmjwL9W7CzCVBqALULMLmjJjsMr2X2qQQDCqQvCDjqq8uwXJYOkY2AOJdmswkA6Ha7qT2l
      132XVM7D97yyEEEfwU8iquvGkeenSeI+Qu1jClmR1WyZ5fnKOTFaTvsDfOdoh6/GbDZzJWWk
      WTFtHlmx8wwgK0g46LTiouMLZvEzSoHGGFeQimqeJtDUAo6DQqGAZrPpav6nldClGUEXxmKF
      0SfJbn8cMFKCUpTs+Zx079QEXOGu0hvc98BRqC0ZgLT3co0AcBKdMQb37t3DaDTCwcEBOp0O
      Dg8P3TySCDulPzpKHwesZ7UJtFSedIzPVJK2rvTvae+B43JsOjylQOOr5plkrkkyC50kNmmA
      lDQPCpK64qz0KT7uPeyO/n8MyEUqyy5I4t9qtWJ2XBIV2norlQr29vZWzEvGGHd8VtVez401
      f9LS5LWKLY+hKetpBxkAN9J4PI6V10gCpa1KpRJr70mtydqjTmR879rU0+/3XbP2VquFixcv
      otvtxsI7WVww6V2MRiPnVzqJZ3FS71yGl3JtbUKQfKYhCT5XzVQYFy/t5DLSLm0eWbWb44La
      40mUQ3HVaNXz6ff7J5ZxHxhACmi6SXIIzWYz9Ho9J1XJej0sulatVp3tTi/kKIrQbrfR7XbR
      7/cTY75985IOJilp+KQe/U9uPO18fBohQ+QIa21mZxkd+yTCsgKrfKbszSBt9jS19Xo9pxlc
      uHDB1XnapLzBWUELPlmkf0modfLWujWtnaMSMqnKmGUoJDusUftmwpyexyb3uQnSrlGr1U6k
      ORHNPr5rnSQDCyYghaRiW0lRAJKAckGyhSFwFHYpCYW221M6pfc/rWAb7dkkQMxyrFQqbtGs
      g5zHLjiBjTmKOKHkRMd4FvCZA3B+E9ZY4u/S1EOMx2O0223n/6GfoFQq4eDgAO12G4eHh4k2
      76Q1lzZPec++332Ey/cceP20ayd1r9rEJp8kXCXNjWUyALjkTDlfPbb0eazze+h5SHOvfBZJ
      z8UnaBwXjNbz+TlyudyJ+e8CA0gAHTlpJWt9zKDT6bhzdCVCIHmD829yfdn9Kwk8XjZ9z0Is
      5GJiX4MnKYN3U/D5yvc5n89dzL0x6WUy5LuqVCpONQfgmtL4JHljlg5cSUQGg4GL5QaA27dv
      o1gsYn9/39vVa1PTIP0WFAR8MfhZ8bhS5iZEl05xWWjQdy59VqVSaaUoIY9nJF4SA/UR8iTz
      aVYUi8WNO+2lgSZkva/lmjoJPL27/jFBOyOjaCS0tMMGLsPh0L04ubi4CaVqnMZQJpMJJpOJ
      k1JJoEkgWC5gMBg4ybbf77tU8fl8nrg59OfZbIbRaORikrfNHPG4oH29WCy65vYkxlJbIlFh
      iJ0GW2JSMpNN2pPyIOgTkG0+m80mbt68iatXrzoCP5lMMBgMXHIe18dxmHIURc4GrdfIcRgK
      sBQS2u22y0pO6inNSCcge64LfVksuJi2/rS5s1AouL3Jd8pIPAZg8BpyTnJu+rs0H0LS8yPx
      PynIuciij9RI9D5llNlxEBiAgibCWUEnMT9Lji3Vad9LTVJT5fXL5bJbZJPJJGZm4piyWQ3D
      0Pr9/sqirVQqsaik6XTqVEppw37SYe2ycN+DBw+wt7fnTAem9zrMH/1T4M5ngNkEOHgj7Isf
      xeSFP4/ZbBaT5Oikl++WIIPme2QBsmq16ur4FAoFPHjwAJcuXQKwLA1+cHAQIzRS8tWmhqz3
      yfN4j9I5LZGVwUvBx1qLK1euOKe3znUAlmuqWq2i3++77OU0yN+ZmzAYdnVY5AAAIABJREFU
      DFJNrkyY4jqn+ZTHUXOWfgffvkoy9+jrGWOcYMRKwPqYXO6obzVzO05aiJLvMEsOxyZ4Onb6
      Y2JTm6VeLKzPIZ1Qkujr8MByuewaf3DMdQ5B+T0dY7lczkn8rPlPgkU7tazfb4xxVU6r1Sq6
      3W4sM5UmkaeBATCEDgAODg4ALCUl8+qvwHz8f4SZCV9J/ybw2u8Ab/49zD/0X2EwiCdfzWcz
      mNF94P4XYBcRsP9GRK1nYqXB+fyNMc7pK2P6mRzY6/XwzDPPxObKrm+sH6QrPK6zr8vfZemB
      TRhIv993+Qx0ZjOJSV5jsVjgxo0bqNfrTtMYDAb46le/ije+8Y3e4nqaEWnCOxqNHBGlMJTk
      n5KlTAqPkvCohbPEuoyqk/tOz0ULafoZS4YiGb/ei71ez0Ul0VdEU9VkMtk41JoCnWxlaczS
      Ae4zVT7Ofn3yd/pjQkoKvt6ZSefoBaOdNJSkGaEwHA6d81amgBPrEtLkAqSKS2JeKBTcQiVj
      oRag7Zx0RnJx8XvGmVPrYC7DkwpmW5tXfwW5z/8s7Dv/GtC4CvPbPxYn/o9gAOCLPwdbv4z5
      O/8a5nYOFCpANIL5/f8L+OLPLZu4PzraXn8/7Ad+BAM8iyiKYgSGPZelyeDOnTuo1+u4du3a
      6rWNwd7eHm7fvo3r16/H8kx80p6WaiVBk3WoiHXO5Mlkgnv37uHy5ctotVqptvvDw0Mnrd+4
      cQPNZhPNZhMXL15Er9dbWTfcG2m+MFmOQTJN3xwoLElzCD9TQ5barS87WOcM8LrcEzIIg4xc
      C3U8j5/J/GkiZFIgkzA3Bet8yb7jp5G0aUajkU1LSX+aYa3Fw4cPVyR3+bss6ZDmeNFMoNVq
      xV78fD5Hu912BHvT2H/6Aaj+ciw5J90DwAeqqNJGyvnLhc0y1k8qJpMJxsM+zL/8XpjBrWX1
      zUtvh/nCz6WeZ3NFoFhdmoZqF4B8Cab9Zf+xtUuw3/W/wzauJZZb5vvpdrtotVqJ13348CHm
      8zn29vZiUh4FkzSfko/A+45PIuxRFOH111/HtWvXNiIys9kstgapcWl6Iucn91nSviPSBBB9
      LjUCalm+feBjOrPZDIPBwAVdsOAac3w0sZf/J82Rv1UqFUwmE9fbexPQL8Rr0MS2KZgAmvQs
      n/4YwAxIS6Sik08uOC3V+BxIURQ5iVxLK76s4HWQDeBppqGUS9tzljFZZ94H3z09qTDGALkC
      8MZvgy01l525bn9m/XmLCGbShZlPYHo3Eok/AJjhXZiXfyL23ikoaDNBluSrer0eszUD8ZIQ
      WoLVMfLAemnfh9FohKtXr24sqereEoyQSls7abZ4/Rx9kHuPRJxZt9PpNJH4+8YBlqGkxWLR
      mbMqlYozGfocyVlMxL7Pm0JaBI5L/LMgMAAkvyi9IKVEpZmAPp6qIACXCPa42YEyakUzHd99
      0EeQZfFoNf1JNv8AcO3z7Pv+Buxf+WngXd8PzJJ7GR8bX/s9oH97ZY1IjZFMv9vtusQ/CgjW
      Wpfu3+/3kc/nXe4Af5eVZn1rjj6dVqsVswfTFCiP1WDuyEmVBKnVaok9o6U9nn9zXpKh6Xsc
      j8e4detWjLizJHK9XkelUsFwOHTlWrKA98rCf/q3Vqu1st+S+oH47tEYEzNnbQoKnsDjddlb
      F9kXfAAe9TONIfD/NNWPGI/HqNVqzuZOCUmG5W0Chndae9S1jJoFADQaDeTzeXS7XXcOnYqy
      3GySus1wPNpDn2QTEKXC5UasIJpOgMY1YHjvRK9jZiPY4R2gfnnFuQkcPdfpdIoLFy44XwuJ
      PEszXLt2zUn2zC5nUxDpxCSkGaVUKqFYLLowZDomJ5MJjFk2BKrX6y76SGoONCt2u91Yq8Hj
      gqVJRqORy5hOk/r1/ejfrF3mTly5cgWlUgntdhtRFGF/f9+NPRgMYppHluvRrNbv911NJgk+
      J5aLJwPwmVM0Q6bzuFwuO2a/aQ8QXoMlSE4LO88AgPSsS19msG8BaGmGzkA6hEejkXNSSbtc
      kv0zCZToSFh4Lom3rBkj49b1fWqwuNxisWwneVoq51mBdZIAHJni3vxRmDufPvFrmd/472Au
      vBX2xe+Aee6DsLl8TKq01sbCA/P5PC5evOglHNZaXLp0yRE6Nv2IXU/Zz0l0KVx0Oh0cHBxg
      b2/PndPtdvHKK6/gwoULMQZAAeGkckBor+50OrDWup7GxWJxpQkR74FaCHtUyFBk3p8Mc753
      756z1UuHsHweSXOTYEhp0n23Wi1MJhPHiJM6fWmnPE203OMy0i4LeB9M+DpNbXznGYCWFmSD
      mONU3dNEVoaBsVCYLuNMNJtNbxIX56YlTG3+YXarvL4cS3YQ0uNK5/BJ9A3eJlBKnr75O2G/
      8nGY13/3ZMfvvQ70Xof58q8tfQ0f/DvIlVuOOEn/TZqky++MWUYFsWDdbDZzNWbk+6NESuL9
      8OFDAKtSo7XWmQLl8dbaWPeyk0KhUMCFCxdi31GrkWW4rbUYDocYj8fY39/HM888g+FwiDt3
      7riEPBnWymfRaDRc8Aad0KzMynBS+XyZ08PEPTZYf/jwIa5fv554H8w21u0ZNbRQKBk0cNTH
      Iesz5ns5i+CcEAX0aNMAiEkTVAGzEMIkqVraPPnyGa7GuHEil8thb28PURR5S/bKBaTnmTYX
      /k57KXCU/cvsWB7D+HUALqNSmpieZDB0cTHuwbz8E8CXftEbDnoSsM9/C+xf+O8xni7bgzJu
      XTNtzitJs5REmn0oDg4OHAFfLBYu1+PevXtuvemGIZo4nTU4L/YzYJjkYDBAPp931XLZqpIa
      G02R0pxHyIQoMoBut+vq8VDyZlIaizLSrs/onHWaLsNA6ShO2m/6eTOHguZY7Z9Z97w4zmlj
      5xnAa6+9tvLdcUwz8vykRSHtg41Gw8UOE9VqFeVyGZPJxEX26HnJayT5IqTJh4XiqB3wOoxR
      ZiciYFlOQmc/VyqVE01zP0/QbDCfzZa+gHufAyZdmC/+PMytPzyx61gY2A//GBbPfjO63S6G
      wyEuX76curHJCHxNfviub9y4gStXrrj32mg0Yg5m4CgEM80ZetZMQGucd+7cQRRFeOaZZzIJ
      WEnZvHIP8Bo0g5E5yl65wHKNs8FOlufA69BEpf0kcm7yvbVaSw2w3++78N9tTLDcvhmdMSRx
      8xHrLJBx2fIcXUyO11gsFnjw4IGTwvP5PJrNpis5wIqRzM6U5286v2KxGKs1z/OkjZz3oFPd
      aZ89LjPcNtBcEFkLU7sI8/yHYD7+oydK/AEsewi/8kvIPf9B945Z1Mtai1u3bjlzhC4L4fMn
      UdqVpjmac0j4pWnRRyzPE5wLpfQLFy5gPB47k5Axxmky3W7Xu9a0YJYk/NC8I9cwsHz3MtqJ
      ndjWrWtehxoEzXmj0ciZd6UWQebMd80id9uKnWcAaerxpnZ/H2H2OfByuRyazaYr41Cr1ZwN
      01qLBw8eoF6vo9VqbdwGUF6TJQjkhkkqWcusQ56rS0Q8La0jmTE9m82Am78P84X/93Qu1H4V
      wFL1p/2bRbsODw/R7XZRr9dx+/ZtXL16NbZONPFeLBZot9vOtMF/stpsrVbDvXv3MJ/PnVAj
      fQ2bCDQnDe6N+XzutE+W075//76r8a9rCEkTj5T4eU+aWRJJ90ofF9srLhaLlWZNet5y7FKp
      5EyklUrF7Vc5V2OMc3Zz7np+24SdZwAnAb7oLKYjzRxkxi3PZTQPJRZfadsskstoNHL+BIa6
      +XoTsPaLJPL9ft+VnNBx0k8yWL651+sBNz55ehcyR7WELl68uPK+ZI/gtGqO1FouXboUywfw
      dQi7cOGCk0xZCypLdU7a3o8Dmlh0yKTMSn/w4IGbC8ssLBYLVCoVF9qZZIv3mT59ZjLpr9N7
      kBoUhR8eP5lM0Ov1YtFSvmfFv5koxu86nU4su9ta60qD82+WBdlWBAZwAtAS1jonjnTm0kko
      NxAjPtgxjDZ8bWJKA2OxDw8PY8TCWutitLkpfRUwGa0htYKnBe79nHBOQAyX3g5rbWKY4f7+
      Pm7fvu0SmK5fv+6iXAaDAWq1miv+NZvNXP9bEltCmkLkZ+l0HI/H3kZBxhy1LxwOhxtVvwWW
      5lNqVARNLQx77nQ6rkwDr0lQy2QYa5ZSK3KNarOZr0aSfGbGGBdkQbOML9dFMhXek8//QHBs
      RhgR1Oq3GYEBnAB0REJWdXs+nztiTDDqgXbEw8NDdDod7O/vO8dtlsbezEHg4pdmHIb+6SqH
      hFzs2+i4elw4AtG8jtNQzG2uAPviR5yvJWkO/X4fzz77LA4PD10y12g0QrfbRalUcpnjaf0o
      gLid++DgIFauWfpxJFgxtlQquSijTUBixwxmXp+mHl6bGbt6zozckfekJXefSVY7xrWDOU0Y
      Y/Tb3t5ebL8mIUnbpplWOoTJTCV0ZVc9hm/ss8bTt7vPCVkdpTp6wXcOJX3W6T84OMBgMHBM
      gJFCBBmJ3Bz9fh9Xr14FsMwvuH//PprNJvL5fKx0MeuMnPdCPG1obQsA8OwHYP/wH8PYk2mS
      7vCO7wUuvxPdTge5XG4lfJCb/+DgwJnfpM241WphPp+7+vgy+U/+L8cyxriSxPydkrhk8oww
      Y6bqw4cPXbLWJkSJdaikZsHrMNOZkj2bvWhIXxXLqcvnJecjHdza7q4d35TIydiKxSLG4zHK
      5bKzz6cJaHo8eR3mH0RR5EJT6STWjI65B7oEDAMuTqJx/ONi5xmAtiUehxBS/QOSu33pa8lz
      JKiSRlHkCAAlC9a4p/OPC5AORSn9MLqChOGFF14AAKf+Un1PmuvTAjLS8XgMzKfL0M/7XwBy
      ReDCW4F3/BXYz/zUiWgCNlcE/sz3YfHe/wTWWtTrdbTbbfR6PVy5cgVAvMTAxYsXV8IKaVKR
      hJxmFW0G4Xj8XhIg3jPXI59FFEVOEKDfp9PprK0ayWtxHADOIapBvwVt67xnqalwHGOMMzdS
      W+l2uytJXfL6+u8kSX08HqPZbCKKIlc6Xc5RzsE3ru86rBIqv6dvwPfsuIdlHoMx5sRqLz0u
      dp4BcANxAzzOGL5IBZ/tUNsQ5TGSAQDxuO7JZILxeOwawFMSOTw8jEXtcDz6EzjmZDJx8ePb
      HJp2UuAzm4zHwFd+E+bl/w2mdyN+zOFbgDf/Rdiv/S4w6cDYBWy+DDz3Adgr716es1ifym+v
      vBv2Q38HtvUcOp2Oq7Gzv7+P119/3ZlJ6MTketNrjsxZolKpoFgsot1uu+Ypklhz/Y1GIxfj
      zvDiJBMfGQ0TE2/evBlrXMT8Ef08fc84zVQjpfx1YxmzjFJj9FtSe04J+s188+I/mj59Wk7S
      +L49LX0JhE/D47WYld/r9VwrzW1ru7rzDOAkoG2P3JzDKML98RB2PMH+3h5apaOFCPgXH23u
      ssY66/nM53OUSiUXLsdYcp/zjqGmcuPRrrxNC/A0EUXR8tl88RdgfufHYeardm7z4Auw/Zuw
      H/q7QOMq7LgD7D0P1C8DsMDn/zXQ+eraa9k3fQds6zn0ej1ndrl79y6uXr3qumtp6OiTJPBd
      U/JknR36DWhr1sSqWq26pCiOw3dfLBbx8OFDF2zAzmYE247KCBZK8SwU2Ol0XDSPLEtBx7UU
      qtZp11o7rtVq6Pf7TrJmpFKSQ1Z/1+/3va0rN4FkUlEUuZBqmUQpo37kc2LYL3+jv23bBK+d
      ZwAn5YzRC/jf3b6J3/raVzGIpmj2Bxi1mvj6K9fwLc++AeUEyQxY7U1grXX2SzqyuOhp9/fB
      J2nsCuEHjiQw9G7C/O7f9xJ/wkz7wCf/D9jv/kng4tscQZ1MJrBf9zHgE/9rqonIVg6AN/y5
      GEG4e/cums0mvva1r8UyT0lAAX8XuDSTR6lUwoULF5zzlZE7DBIAELMtk2ncvn079v1sNsOr
      r77qAgP29vZc0AHXX61Wc/1/5dxu3bqFg4MDTCYTd7/WWuzv78MY43ows3yChJSe19nhC4UC
      yuWyY2CyMQ4r65bL5Vj1UTketSYNn6S+Tgtgx7R6vY7nn3/eBVAkmczoF6nVarEugNuInWcA
      RJqkwJhq9nUluEC4aRgy+dl7d/CLr34RXI7zXA6zxQIv33wd49kM3/XiWwH41WBK97T5AnGt
      oFAouFry2iYr57XroFkPX/pFmGh9HwDT/Rrsa78NvPhRt1kXiwWil/4D4PXfW/7zXSdfgf3m
      HwFqS8Jcq9UwHo+dY/P5559Hu912Wd2FQgHtdhutVisWmbVYLGLhmiSAPo1tOp3GYtBzuRxe
      f/11XLx40YWUSp8UewXcvXvXhf2yZSGjjpgQJa8lQ5NHoxEePHjg1qL0MQFHtu5+v++ikeS7
      4Dzl33L9+hy6SU5SxvAzSZIEVs5Hmmt8/r11TmBrLe7du+dat16/fh2Hh4fuGelie/IeSAfo
      x5D3um3YeQYgbX38W4N1Rdgyzhd65sI/AfzqV16FXF5zsVg+e/cO3n/tGVyp1b1JOsxUlHOR
      ph7ttNb3QhvyttkazxpOk7r5B5nPMbc/DfviR50Zr1qtLongh38U9g//Icwf/wwQDWCwrPeD
      iy/Bvu8/g732XthHBLxWq8XKGXe7XUfM+Q4rlQr29/edo5bEin4dYCml+6JIKBHXajXcvn0b
      +Xw+VlKBZQoYFCB9Cs1mE71ez5UOt9Y6R2u73Y61LjTG4Pr16xgMBrh79667Zr/fx2AwwGAw
      cCWtWWhvPB6j0WisrZ7J95OVOOux+G4kcSXDlxFNWer3czzOic+43W47/xkbzvuIPiP1dG4G
      /Si+Ju7bhJ1nAIQOMQOOFh5jnXWtHJ4nz78/GqIfxc0N8/yRdrGAxde6HVypHTn6fKYa7Sgm
      cdBSv1zkMrJn1+GeXQbp3+HRsZI41Wo1jHM5RN/wn8K+54eAe5+HnY2B2iVg/wWYXA6wR0lI
      TOLi+QcHB85OT2Lb7XYdMZFEX4c6kjFoHw8JfbFYdL4FNkghUapUKo74jEYjZ3aSNfllFA7n
      xT64NDFWq1UcHh7iS1/6kuuSZcyy3AGlcDZ+0SWg5XzT/tbfk3gz0k3/5jueBJff+4i8FJ6k
      1t5oNDCbzVx/ASavcS/RgUvQDDUajTCJZviTrz7AZ75yH53BBK1qCW97/hBvf8MFAENX+mJb
      9+TOMwCfOir/5neSy0s1UzrfkjDTtt5HQ6dtBEp6shyzvoZc9AC2eqGdNdxzaD27DP3MAFs/
      CtUkKG3OZjOgUEbu+tc7DYFEGDiS9FmwjWWOSYxoVuI7JFFPel9pGikl1sPDQ7z22muOSezv
      72M2m+Hy5cuxBD7a85MEHH6uVCro9/uo1+tuXd+7dw/T6dRpFLxvYwza7barTrr22SrGlgZe
      R2rV02jZm6NcPIpUksKXZJgcwyexy2vzHQFLzZuaW7Vade+HZdTleWQWX77VwU/+wmfwldtH
      HfgA4Bc++WVcPazjBz/yDrz0/KHLtt5G7DwDkEhyTGnnlT5HfnehWkM5n8dE1laRGw3Aldpq
      RIi+nlRddeiZPI6LXC/SXYdrevLsNwGv/NLaOH9r8sDzH1ypkkqQOCQ5bqXaDywlcmqNTNRj
      REupVIppdD7GnvYuGbpprXUS+3A4RLlcxmAwWMnepglDF1vT1+A9RlHkzCtsY8rGKbJ2PzWL
      da1DNcFedyyJ93g6w6/94Wv4xJ/cQrs/QS5n8NzFJv6997+Atz1/uPKspClIVuT0MZ9Wq+Vs
      9dZalxtBiZ/mVprh+DzocH7lZhs//i9exnDiDxG+9WCAv/+vPokf/th78e4XLyWuq/PG01Xk
      5RhIk/z5tyzvIJ1UvkVtAPz559+YeL23XbiEZ5pH3aKkT0H7IqQUJOdIcEFR8gwM4AjGLMP1
      8KYPAxe+bv0Jb/p24OJLXknNGONs+ARr9oxGI1fyWdd9kfZ0El/pJEyaN/9PEkiokTLcdH9/
      H9euXXNmGF8FWmDpqG2327h//75rOcnxALj6UPliGbfbQ9xpj5AvFHHx4kXkcsu+0p1Ox5VS
      vnDhQqxRuxxLf07aL77fcrkc7nfH+NGfehk/9et/gldudvCgN8a9zgj/7kt38GP/Yvk9n5EU
      wuTfab4EdufjdeX+oRbBJL5+v+/GWmaTz/GP/+1nE4k/MZ0t8JO/8GmMJrON6yydFYIGgDgT
      0MSd6j7/950nzwWA91y5hsl8jt987cuYi0X40oWL+Ogb3wwDYKF8B77PPsg5ElmcbrsI1rmx
      H/5R4Bf/JsyjEs0a9vr7YL/pbyJfLMWkWU2wGNInnz8le11Og0xD2szlvMbjsbfXg/5bEzIS
      /du3b6NQKKDX6+Hg4MCtTUb2MD6fY1ETocmDWok8fxLN8W/+vy/hNz71GoaTGQyAZq2Ej7zv
      BXz0fS+gVCrh4ODARSGNx2O0223U6/XUomdaQvfdF7/L5XKYzRf4P/+fT+HVWx3veAtr8fOf
      eBUXW1V8+L3PJ9r7tdYunyuZH5247EdAx60uE01/SBRF+MyX7+HVW3GzTxLa/Qk+/pnX8ZH3
      vZC5w+BZYuc7glGC04RVF3hbN44k3JTaB9EUr/W6iOYLXK3Xcal21BRexjVriUVLInJMX1KP
      jN4IOALNAcPhEHY6BD770zCv/DLQv7k8YO852Ld+N/CW7wQKZZdsJBOYuA4ePHiACxcuuOY9
      fHeUIpOefxRFiKJopVAYwz5ZtI/MYrFYOI1uPB7jxo0bsTIf5XLZdZnK5XLLNpeP6trre+c4
      s9nMOYE1s2Gy0mRm8T//y0/iSzf9RPfdb7qEH/7Y1yNnll306G9qtVou6siXOayFJL3GtWad
      z+fxic/fwk/8m/VNevbqJfxPf/1bUSrEq+TynWU1udBBL7UAa5fJZF+708Xvf+E2/tI3vQmV
      SgWTyQT/5Jc+i1/+g/XJgcR733wZ/+V/+A2o1+tbV1xxu2ZzxpBSWlJKOZHmlPNJNtZa1ApF
      vO3wojtfEnR5rh7Ld0yahO9Lugk4ipZpNBoYjwuYvvv7gff8ADB7pI4Xykea3qP4eDJmnagn
      n68kXus2tAwf5jlcI5VKxRFNml9oU8/lcnj48CEuXrwYM0uxiifHrFaraLfbePjwYSz23hjj
      Yv6laUWDTut/9G8/nUj8AeBTr9zFz7/8Kr77m1/E1atXXcQQTWPD4dDVpBqNRq4ctRZmJGPV
      mg7//tQrd1OfKdEdTPHlW1183XMHK9paVo24WCw6p7cEz5/O5njtbg/WHu3J/ihaGScN7cFy
      vWXxgZw1tksfOQfkcjnXwFlC2xZ1/L+GLK0szUeUKJMIuv7M8/UcJAORi7tYLG5thMG2gJEr
      fEdzU8DcFFxin6+ct4R89vpdZgU1EZpn6AeQ9YAodXY6S0Is6zjJcWRoZD6f95Y88K0hH4wx
      eNAb4+U/vb32Hn7jU1/DJJo7XwNj/9lkh9e8cOEChsOj8Fs9hyQ/AJ/x/e5o7VwAwAK42xmu
      jLlOYCLoTE/S8K21eMOVFv7Gd78HhULevYt6ZTNhq1EtuXltG3aeAdBZKNUzLe1nCV2T58lz
      fYtxnVkpadNKQmWMcQ3bt82uuG2w1rrkOjIBRnj4nrUmULSTA8fzt8g1llZ6m8LI/v4+rF3G
      5Y9GIzenyWTiSjBIyEbn+r55/TQGcPP+AOPp+oJ3D3ojPOiN3VisBUQT5eXLlzEajXD//v2Y
      SUqbV5MYKH+vlbMT2FatFGPQZOBZ3hET2JLmUy6XUa/XUa/XY0IiI5Cy4qVHx2/jPt2+GZ0D
      jDEuXT5JHfRVbpTQNvosUmKapCmP8TGQZrP52MWunnZYu0yK6vV6MRu49rlISCLF34vFokug
      Go/HiKLoWFrAOmmcvgBjjIu4YTZyu93GYrGI+R84Vq1WW2kRKe9RRpn5MF9kuxcLwNqjZ8R6
      O9LExaJyaUKO1no4T4770huyEdhqqYA3Xktv57gOURTFKunqecr7I7N41xsv4eJetto+5WIe
      H3jHdWdq2zZs34zOEcYc1ekeDAbodrsuO3DdwpILfpNF6FNdZQEs1mOhus+sxBD2ibV9bJnB
      7dvgdNzqImKEZMSlUgk3btxwjTxu3ryJfr/vKn/65sF48U6nE+vpnAXWLouusaEL6+zo8sj8
      zExWGa4o57Hu2tcu1FEsrCcFjWoJe/Wj5i4HBwe4ffu2SzLrdDq4d+/eSgczH3zEkMzqQ+98
      Bpf3a56z4vi29zyHZrUUc/jyfjd53rLEioT071A4WywWqJYL+IHveDvyufT9lzMG3/cXXsJB
      o7K1rSEDA1AwZpkaX61WHaEdDAbo9/uuZyvrtjBGmI62JBvyceag/1HNlinqu451TvukjT0e
      j/Hw4UNXtG0dKL2xiTgjdBiL7zMjTCYTDIdDVzKg2+2i2+26jHJ5PIkLv2M3sKtXr8ak5X6/
      7wqgAXDrEFgmntHpuwmstbjYquIdb/CXcZD4xq+7inql6NY6iyRSUt7f30ehUMDly5fXjiUZ
      rH4W1VIBf/273oVmNdm39Y4XLuB7PvTm2HnHcQIDyVqAHINrgJnC737xMn74Y1+P/YafsNfK
      BfzAR96Ob33Xs7HaUNuG7ZzVOUP2Oz04OHC1wLnpSZBpgun1eq7ynzQDZVmEvjA5nwnKWrvV
      C2nbIImjBEM6r1+/nvp+9DtgmQQWdpOgMMB1I0t3kFgycSyKIkfUS6UScrmcc5gytJJVN7kG
      jTGx+P3hcLjiwKT2KiPCfGvJ9zxyOYP/6Ntfwmt3e7jfXW0eDwDPXWriYx98c+w7afYh9vb2
      cOfOHRwcHKyEvkrI2v6+8Oe3PLOP//Y//ib8q9/8U3zutQfoDafI5wwu7VXxre96Dt/+3udR
      KiSXVd8EPtOrD2R2rLn03rdcwVueOcBvf/Z1fPYr99HpT1CvFvHS8xfwZ992FVcO6q7r2rZi
      p/MA0hBFEXq9HhqNBgqFgnN4Af4kFobh0U6sqwcmgePIujJkIpTWOuFGAAAgAElEQVRQSUiq
      1Wrqpgo4Aot6yffEGi6M+wZWSwno76SNms5NnSwmz6XDV2sfxixr5dNZmyatRlGEdrvtnKqj
      0cjV++d6oOlKEt/hcIjBYIArV644orZOCOFxhUIBd9oj/PNf/Rz+6JV7LlGxkM/hm166hr/8
      LW/BQbMSI5RsjC6ZEMe7e/euq9vPMsoSSb4YKcmTQfRHU3QGUxTyORw0yig+ivtPErRkwpXv
      OeuQVDrfNxGuGOFHq4CGrAC7zdp6YAAJ4CabTqeo1WpO3U9y4rFBB+O0p9Mp9vf3V5gA479l
      2drxeBwr48zjmHI/GAwwnU5dg49tXlDbAJp/+D76/b5jqnt7ezHJmJ8l0ffFqANwAoH8TjIA
      Tcg0geP5vnMBxJh9u912jKZSqbi6NpKQUjMtFovOLHR4eOh8Akk9e/WzoqP80qVLAAzutIf4
      yu0uXv7TW6hXivieD73FRdsQ3AucI+fHZ8eeB1EUodPpoFarxTrU3XwwwCc+fxM37i/NZ5f2
      a/iGt1zBmx45denU1lFT8pnpnhhZMm3pY5Nzpvbk69qW5flJE540Az8J+zQwgBRoJjAYDNzi
      yeVyLiacKv1iscB0OnXVI/mZYG136cyTZgLAbzai2QJYqtjBDIRYGQUdRULnKQmpbrxOyO+0
      VAjES24zMkdHXvkYQNI7ZME2/f5k+WlmI/Me1xWfk3kJ4/EY1Wr1ESGHExzSwHNphmK4489+
      /Av42d/+IoClvf1v/9X3u7VKqVfG/ut98ODBA9RqNVcCezAYoNFoYG4Nfua3/hS//AdfwWyu
      S0EA3/i2a/jBj7wDleKyqxq7jslcF182vGQAej1IxqTLQvO4RqOxk/k0gZKsgYzGYbNqmV0p
      QTOOXSxQzOdRelRnXTpwfSGdWX0FlNYCA4AjlHLTt9ttzGYz10JzNBolht9pid/3O+AP1ZWf
      NfNOM73Id60ZhmQ2lHplMpUk+nI8aWJgq0JmE5P4pkXl8Fw2e+HzlHV4vnyr6+YzmUxiTWZk
      0IM061y6dAm9Xg/dbtdJ18bk8JM/90f43c/d9M7FWuD3PncT9zsj/O3vfT/q9Tq63S7G47Er
      O83n4HvGknkm1QPS33H+0+kUi8XC+WV2BYGSrAHT84fDIZrNJprNpmvvJ22IxhjMv/QKpr/z
      OxjduoUoZ9Bq7aP4je9H4Z3vQO7/b++9gmTJzvPAL01l+aq2180de8cDY2DHc4YEBlgYgqAo
      EhApURRFp9hY7cMGYxkbjFg97EohcmODQXG5IqUgV6IEghAVJDxAA8KScAOOAQYzg7nj7p3r
      2pdPvw/V/+m/Tp3Myuqu7ttddb6Iju6uSnPy5Dm/N9smn92ohaRqU+Gq3V5n2sClY56QRAS0
      VCphfX1daF0cKj8OfSYTf+o7O04xL9X1gR3bscwM+PfkaKQ6QjKjoedVaT+GYQhpm8pguK4r
      WoySyUbWDIgYUvmJR+++Fi+c34AXRHj8LdeLcfGGMUB/7UdxjFcvN/Hca2todDzMVwt4883H
      sFSvChOnaZr46ncvJBJ/jhcvbOIz33wZH3zwDCzLEto0l9BVBJ0+lwm8/D7oHD+IcG6lgUvr
      bRybL+GG4zU421r7rJRW0SagDIiiSJQNILsm2VcNw4BpGHA/+zm4n/ksEAQITBOdYgG19nZ0
      xwP3o/iPfwa5QmHXlTvJqUkRIVTgi6u2FKUwa8whiiIRYul53kCrTTJLhGEoGranSffE2FWO
      zUajMdDgnb7jtnuVxMlNNPwdqbQBYCfxjO6pCj7gPgb6n2AYhvAbyKYTz/NEETl+XqfTged5
      AzV8Nlou/CDEsbmSMENyc5plWWj3fPznv3wW33r+0kBCWcGx8O633oAffeAMcpaJMIrxr/7z
      3+K1K6P9EkC/0Nu/+eePoJS3sb6+LnoY03xyf4g8B3wPPPvaOp59ZRUrW12cWqzgLbcex7XL
      Vbx6uYE//Px38RKrf3TzqTn8wnvvwjVL1QF/3DTD+vVf//V/pU0K6SBVm+q+0wYhYuF/+wn0
      PvYxINzOAjaAyLLgbEcHROfPIw5DWLfdtqfGELTgPc/r1yXvdBBcvISg2UKYs+FvM4RZSxKj
      +SBpk+y5VCfJtm2EYYitrS2RTAcMhv/x+eLF4GTiwqV32fQh/83PNwxjoNCbignwe5E5kc5T
      mVnSJF+KUCkUCgNZ6pcvXxYlKXgHMyoVTZ/Zto1ywUHR2Wmq4jgO2u028vl8/5woxu9+4ik8
      8YPLkJWdIIzx/LkN+GGEN96whEbbw8e++Hzmd+r6Id5883Es1ooIw1D4zegZTdMU9ZRU78ML
      Ivx/f/E9fPSLz+P5cxs4v9rC919bx99+73UEYYQ/+dLzuLA2mD293uzhqZdW8OCdp2Bbxkx0
      2NOUPyNILe/1emIDxXEMv9uF+6lPA0z6MWIgJ4WGeV/4G+Tf+U742/1hxwUxoV6vh2h1Fb1P
      fwb+d74DeD5gGDDKZTjv+BHE73ocURTNTIcwaocIYEj7kYkvtUyk2jlcaucStWySIQ2rUCiI
      hihyNE+aL0dmIrLZRgYFH1Av4SRzUtK5ROx7vd4A82i1Wmi1WlhcXBxwRsfxYDgpR6fTQafT
      EXkOvV5P+LK++fzFkZU7P/etl/HQG04hjvulJMbB15+7iFIhh1OL1QFNigSop86u4OvPXYQf
      RDhzqo53v/UGISR9+hsv4SvPvD50zZ4XCue2CiubXXz5mdfxvvtumglTq2YAGWEY/abrvV4P
      nU5HhIxFV64gujxYSdGIY5ih5Fj0fQTPPAPr4YfGXli0+DudDsILF9D+7d9BvLExeEyjAffP
      /hzh2bMo/covo2MYU18riOaEzBq8IiuBMwEiqGEYotlsinBcFVTmhTjut2Dkzk1qmRgEQeJ8
      c+KdxY9AjluqGlqv1wdMQaPOpfVVKBRw4cIFwazCMES5XBZRPDT+tLVYLBaFVsWdvwDw9WdH
      2/PjGPjW85fww/deN/JYGX/5xKv4q++8ip/8odvwvvtuFM8HAH/+ty/iz766Q8i/9fwlPPHC
      Zfzah9+Ods/H57/96tj3I7x0cXOA4Uwzppc67ANoU/EkolgRa20AsFWRJdvHjrOwXNcVklvk
      euj+pz8aIv4cwdPPwPurv4a/XQdnt4XLjgLI5EObtd1uC+k0TSKnpi6UuwEM2vqTIn3oHvl8
      XvSQbTQaaLVayOfzIhEriVCrtAv64ff1fV9EvxDDSPPT8evQ/4RSqSTGRUwL2OkINqpVoWma
      WFhYQL1e3+mzvH39y5ud1HMJVzY7qJUcnF7aTZw98N+/8gJeX20JTeziehuf/LuXho79weub
      +OJT53B+pZWpumkSqoe4fPOkoRnAmDCMnSYghmHAGCN5xKjXxHkyyAFJkh99FsexiGAJXvwB
      wldeGXmf3ic+ifZv/TaCV14RKvwkUuYPG6jKJ80bJ9RJETic2JbLZeRyORHVBWDAScxBtfxL
      pZKwR+dyOdTrdeFnqFQqojE75YzI4aZUV6rVaonj2u02tra2RC+AjY0NWJaFzc1N0RsgiUHJ
      kMsrkNReLpdF8ABnGKMK6tG9edIUaTBFJ5sBoejYsC0TD7/xmkzHywijGC+c3xBjPnthE4Gs
      YW/jmZfXEI9tbNqBYQBvvHEpVYCYJmgT0B5gWRbMY8dgHj+G6PKV9INtG/attykdtGEYCiJE
      DIYkWYrl7na7CF9+JdvAggDh88+j/Vu/DeeHHkH+3e8WBG+aFjVJyMBOSe8kUElfcnjyejy2
      bYsOV6Zpwvf9AUd/u90WpY/TmDc5mCuViqjZQw1baIw8uiTLuyCGRM5aFXOTtQr+GT+WnND0
      HRU2ywLLslAqlUQ/As/z8IbrFxP79nLcsV1o7p1vvh7ffWUN331lNdM9OerlvGBWxXwy2aoU
      czi1WIFtGUOJZhyGgSHHNQDcd/tJvOnMsZkpuKg1gD3AcRwYjoP8e97TX1Fpxz72KMzFBeEA
      JicdSYJcUkzclH56VqeMuNOB+7nPo/MHf4AgCDKV6T1KWF5eRrFYRKHQL7ebtmmJaJFdnSdQ
      GUa/vwJJ30Q0qYAbRRUlXZuSzrgz2LIsEbrYbDbRbDZFYTe6Zxbw0EZV5zoZSZKr53kiDBWA
      YFTj5DU4joNqtSoii975lutRSiHGQL+I3JtvOY4oipCzTfyLD9yDt992IvH4E/PDta5OL1fw
      xhsXRXTSracXUCsNZ+0aRr9i6UK1gEfuOp06rp99/E785KO34uRCGQb6dfs/9Nht+MX33o1c
      brjg37RCh4FOAPHx44BlIXzxRaVYkXv721H88IdgbDf8IOnQ73bhnz0L/+lnEG9swCwUYGwT
      f64pGMZ2puLmFoInRzfLlhFduQLnoQdhKloMHnVQxywOTgR5qYQwDAUhlyVlsrNTxVcyxWUh
      klSzSVUFlGLxXdcVMfTjBgAQwaXQR85I5GMJFAba6XSERlMqlYQJaTdVKrlvJQgCOLaBm07W
      8fcvXoGvMMkcny/hf/rgm1Av58Vz5HMW3nrrMdx53SIsy4BtmaiVHdxx3QJ+/KFb8E8evxPX
      Hatho9mDZRl4883H8YvvvRvnV1r48jPn8ZVnXsdW28W9Nx/DSxe34Pp9rcC2DPz4Q7fg0bv7
      hP/W0wt47UoDVyQ/hWka+KG7TuODD/XrGz3z8irWmz2EUQw/iHDPmWWU8rmZ0QB0ItgeQY5I
      z/MQvHgW3le+2rfTRxHMEyfgPHg/7HvuAYyd9HXDMBCdO4fuRz6K8OWXdy6WyyH/vvci/67H
      YeVyIt7aNE30ej24q6to/R//GnGjMd4gDQPV3/wN2PWdjmc8lV6uaXRUFn4cx6L8Q9K4ub2b
      Qng5oZTNKhRW6jjOUL5G0rxQX1wq8EfmIM5oSJNISkJLe0Yq/UxliJvNptDmZCGBSlZT3Smq
      X8SfhbSmvbxnqrdkGP3icZ/55st4+qUVuH6IeimPt91+Au9803WolhxEUYRCoSA0W8rbUEVs
      2bY9oKnGcYw/+eLz+Oy3Xh6QrSrFHD782O0oOBa8IMKZk3WcXNyp6BlFEfwgwNef7Yeqrmx1
      cc1iBW+59RjuPXMMcQz8nx/5On7w+ubAGO64bgG/9uG3o1gszoQWoEX/PYLs9JZlwb31Ftg3
      nxn4Xjget+vW2LaNeGMT7X/3/wwTct+H++cfR/jiiyh8+EOItot6Adtt9Op15H/0/ej98UeB
      MZy6ufvvh1kpDxShIymO29H58xyVJBjulEz6XnagqiJxAIjua/z/pMJvHPI1+TlyGKmcsTsK
      vV5PdAQjqbRcLmNzcxOXL18W2c0ARJgnLytORQypEif93uu75dVsj82V8HPvegNiAL4fIu/Y
      AxFJ3HEOQJjreNguFz6oiJ1hGPj2C5fx2W++POTWbXV9fOxLz+N//9kHsFwvievSfYjhP3zX
      aTzEnM80hisb7SHiDwAvvr6J9WYPJ2akMJxmABMAbU6KMeeOSapjQpKcYRjofupTqVJ88N3v
      of1v/i3M5SUYtRrsW26B89ijMBwHzsMPAQbgfvyTwyGopRJAYY2VCux77oF94w3I3fd2WCyz
      FNixCQcvvAD3b76IeHUV5qlr4Dz0IOJbb0EYhnuWEvcbvu9jdXVVECLqSKUCJUepnod/Rx3g
      qJ4QfSdrCjyyx/M8EabJTTwysefMKCu63S4WFxcHmBc5m6vVqugPQZqHHGRgmibm5uaE5jep
      6BZu7uJjy9nmUF0muZUlzYcqK56eg87/wpOvJcb0NDoe/ugvn8WDb7gGd9+0JK5J65w0HVnD
      Jc1FCaNvJpoVaAYwQfAQUUJu25QjMjM9b9Dsk4C43Ua4Xa8lePoZeN/8Jsq/8sswl5aQf+QR
      5O69F8F3v4fw4kUYjgPrphthXX894vV1xL4P8/hxmNtJO3IJapL8/SefQucP/hDYjgUPXzsH
      /9vfRuHHPgC86/GBJjWHEWEYYn5+Xvy9sbGBWq2GTqcD27ZF1AtBtel56WUKJZUJJZfo5ZLD
      1OQlibEA/XBVHtqbNBbV2ChunyRaYsr5fF4kZQniq3hXZHrZD0ZOvg1iAsAOY3AcRyTGjXvv
      YrEI13Xh+wHOr6TXDnry7AqePLuCa5er+MX33oUbT+6UiQDUe9KyLCzWCrjlmrkhLeDW0/Oo
      l2en895sPOVVBkkeuVwOQaeDWOG4HIXo3Hl0P/JRlP7HfwGnUAAWFmA9+MBAlIhlWYi3G56Q
      JKQKOXRdF1Gzie4f/RdB/AWCAL2PfwLWbbfBvenGQ1tXKI77del5SOP8/DwuXbqEkydPjpR0
      eYOfbrcrolu4SYkk/qQCcr1eb8AEQ+cQuLZFUjxnIKNAzujV1VXYto21tTUsLCxgfn4+lUCR
      /Z9MRvvx/kjCJu2WwJnRbmpe0bmkCcxXC9hqj45+O7fSxO98/En8659/GLbtpnbOI8b1y++/
      B//h00/jhdc3YMDAndcv4hfeexfs7b0zC9AM4ABhmiaMfB7mseMIN4btj6MQPPsswnPnEJ05
      M1S7ZRynYhRFCJ57DnGrlXCjAMHTT8O+/roh+/ZhAUl2V65cgev2N3ylUhEbP4loU1x/GIao
      VqvCYUrXIJMOSbbESIng8uQuiuzh2dbyXDWbzYHa+ePMJ0XrlMtlcX9qUHT8+PGBY0kAGBUO
      O0mQUEOlOPizjWPmIvAgCXreN505hlcuZQt6uLLZwZeePo93vfWG1Hkm38gJw8D/9tP3Yb3Z
      Q862UCs5grEdxjW/H9B5AAcIoR4//CCwmxo9cYzw1VcHnGeyhMdtsqnZsKtrqbeK1tbE8YcV
      RHgLhQI6nQ4ajQYKhQJWVlaEhiCj2WzCMIyBzmpkJ+YNZcrlsij97Pu+yOAlk1Gn08Hy8jIu
      Xbo0kE0rz5dcd1/VI1aVmRtFEbrdrqhXRFpDqVRCEAQ4f/68YE7VahVzc3OoVqtKe3scxyM7
      g+0GJK3TGuR+kt2sGx79Q9d+33034bZr5zNfg+r4jMp8pzyIYrGIpXoJC7WSKPOS5fxpgWYA
      Bwiy3ebe+lbkHnxgV9eIN7cQdfsJZHxT06YLggCXL18WJg45qkXYaiUJUoZ57Ni+mQ8mhUql
      gnq9jnK5jCiKRNieZVnY2NhAq9UayBOg3sCq2P5arSYS87gkWi6XhXZRrVaFU3Nubk7kClC7
      TmCwZEMYhpibmxO194EdJ6cceQUAm5ub2Nzsa4btdls0XJffAZf2eZIa3ZsIPmeA+1XbXu6g
      RYxgN+0V5YYvhUIBhXwOv/qTb8NPPHILTi+PLrtSyFiegu5Bc0jlsU3ThOu6+8IwDyO0CegA
      QQsuDEPgZ34acF343/r2WNdwP/d5+E98B4Wf+AfA3XcNRDb4vo9WqyXKHne7XdHJDIAwawCA
      fecdMJeXEK0Mp+UblQpyb3vroc8JyOVyWFxcxOrqKpaWloR0TfHmcRzj8uXLQkNwXRcLCwsw
      DANbW1swTRNBEIgiaUtLS7BtW9Tf4VCZFMgpGwTqwmOG0W9TSXZyw9jpIZF0PJmjfN8Xncjo
      O7o/FXKj3ABqDETNcAzDEJFJpBHsFwOgSB/O5Gi840LF6PrlSzr4wANn8Ojdp/Fr//Er6LjJ
      hd5uvmZuZGgwwfd9wUwpr4GS7mahGQygGcCBQ8RmxzEK/+jDQBzD//YT2S8QRYguX0bnP/xH
      lH/1f0H3hhuQy+WEtOf7vjATkETY6XT6IalPPQXvq19DtL4O6+QpOO98B9zPfA4xJ3jFIoo/
      89OwlpcPfRgo0J/PxcVFUWqh0WiIeHciqCsrK8I8sbKygnw+D9/3sbS0BAADtYGIKABIDBsl
      UKtDIrycaFDXLdu2Ua/Xsb6+LmLb6/W6KLG8tbUlErxKpRIsy8KVK1eEjV8OHaXsZCJaPGxS
      dvgfVCSL3LOAnmcS4A75uUoB77//DD72JXVjmVuumcP9d5zMlMMSRRF83xfCQj6fH+grMSsM
      QGcCXyVQm8kgCBC+/ArCF19EtLEBc24O7l/+lbLMtIzc29+G0j//+YGkG2pWAuyUSTBNE+4n
      PwX3058ZvIBpIv9jHwB8H9HqKqxTp/qS/8KCkB6PCuI4xrlz55DP50WF0FKpJBqZkCOWCPXa
      2hpOnjwJ27Zx4cIFwZgbjQYWFhYGsqVVNnUivkREeLgmleG2LAu1Wr8C7MWLF7G4uCicpoZh
      CCZAxJOYVKPRwNzcnLge5SIAELWMDMMQ/gzKQeHjNAwDtVrtwAgZZSfbto1yuYxmsyn6Eu8V
      1PPBtm14vo9Pf+NlfPLvzooyEKZh4K6blvDP3v1GLNVLA816VCD/kOwv6Xa7ImSbMrennRFo
      DeAqgdRbz/Pg3XwG8ZmbBCHPPXA//Ce+g/C11xA89TRiSb0mhBcu9P+IY8StFqKVVZi2BXf5
      GFAs7CQyXb4M93OfH75AFCF89VWUf/mXxEeWZaU2SjmsIE2g1+sBAFZWVuD7viCyPNEL6Eut
      5DdYXl7G5uZmv2AZI6RkgiENQQ4BnZubQ7FYRKPREMxXhC/Ozw9ExFAjmXq9LhyN+Xxe+Avo
      WGrZqHo+GhOBnqvX6wnplbK4qYzIQaFUKqHX66FYLApfU7fbHUmMs4DMYgBQyOfxgQfO4KE3
      nMLLlxrw/BCnlys4vVRFLmdniuAhUyw/jgInyNFP71MzAI19Ay1ErjJHUQTXtmH9yA8jjmO0
      //3vIfh7dQE4c2kJUaOB3sc/Af+JJ4Bun/gZc3MovP99yD34AAzTRPDs94GEuu/h2ZcQhyHi
      7bEc5RC4UqkkJOhrrrkGGxsbCIJAEFR6LirJQc5YkryJEMtZv/S37/uixDOPM6folR2b9bDW
      UCqVUCwWsbGxgbm5OVFfn/frBSC6f1HZaLpOUqIZaTfU5Yz65B60+Y5rWTRvvKvZXpDL5URj
      G2rluVgrYrG2UzWXl4FIA8/t4PB9X9R/arfbiX0hpg06CugQgIiOaZqiaiNJTs7DD6tDRg0D
      zgP3o/N7vw//q18TxB8A4s1NdP/rR3ak/rSQNmOnMDrVnQmCQPwcpU1AUTsnT54UDmLLstDt
      dgckeN/3RbIR1bcH+oRmbm5OSM9kfqEeAs1mU5jFSFPodDqi2UpSnR1iCGSW4VFDJHnS71Kp
      hIWFBaUjOglksqB+Bgct/csgG3oul5vIOMjM5bpu39fj+7i00cbZC5u4uN5CFMWiwNyo9drr
      9dBoNIYc91SWgpguZc9PO7QGcAhBxCKfzyN6w50o/PiPoffxTwK0aB0HhR99P6L1DYQvnlVf
      JI7hfv7zyN1zN6ybb068l3X9dYBlId42dbz22ms4duwYAAjiWKvVMklXhwEi1Ha709fJkyex
      trYmJHOKWrl48SKOHTsmyi1ce+21A8/nOA62trYGTANzc3MDZSDI3CMTCnIKkxROx1FXsTiO
      sba2hsXFRTFmbnIj5tJqtYQ/RwXq8eB5nmA+xACuJojR0d+7ARXAo+dxXReFQgFPnl3Bn331
      B3h9tYUgjGBZJk4vV/APH7kVd9+0LPJCZBCzp/mnntBFVn4dgOjBfFgTICcN7QQ+xCBno+d5
      iNbXEbx4Fogj2GfOwFhcRPv//i2EL7yQeo3Chz8E57FH0fvjj8L70pcHvzRNFH/uZ4E3vWmg
      pSKth62tLbGRaWMcpU1Bm77RaAyVT6BwSbn5Oz+32+0KExHZoInwE2EPgkAwB/p+a2tLNFOn
      aB1qwE5j6HQ6wpFcLpeF6S2O+yWueUISlZugwAHLsoR9mswWJDRUq9WpKGNApa0BiFDXLz51
      Hv/lr55V9h4wDQM//5434ofuOi0yp4nxBkGATqeDjY0NYfY7fvw45ubmjtR63g9oDeAQg2La
      bduGZ9uwmMQYRRFiZkpIQrSy0ifqH/opmCdPwP+7ryPa3IS5sIj8e/8H2HfdJaIsSqUSNjY2
      hORK9eQdx0Gr1UKpVNpVgs/VgkgmUgg4o5zcFBVEyOVywqnM7fJUJoJKGJPkTzbpKIpEJU6O
      arUqpPuNjQ10Oh1RP8f3fdRqNSwtLaHZbApNhLSbzc1NYd4CdpLLqLTFNIAynMkkeWmjg498
      4ftK4g8AURzjP33+e3jD9YuiDWe32+1X4w0ieEGIufkFWKYhnPKzTvwBzQCOBHK5nLBZAzv1
      bMwTxxGtpvdXtU6eQBRFaDSbqD/2GPI//MOIwxDGthOSmzGoiBglL3meJyTMhYUF8f8sgqqL
      uq47EC9OFVNXV1dx8uRJUUoaGGymrgIRIKp+OTc3J5qnkPmHlzMG+qGKdBxv1H6UzHRZQMyV
      nL9f++7rIuwzCX4Y4avffR0/9uDNaLfbWG908d+/8gKefXUdrZ6HxVoRj91zLX7k3utEIl2W
      +ZJzPKYJmgEcIciLNffmNyP47veSjy+VYN1+O4IgEHZwUofJYQj0Qwe3traEeYEkUB6pAkCU
      F7jaNuarAcMwhFOckrFWV1eFv4Hmi2fdZnWgx3E80MSFriNrGwSq0BpFERzHEQlk00L8OWgO
      szSfB4CzF/qlNDZbPfzbP/kmLqzthFC/vtrCf/3r7+PCWgs/9643wPM8kZnPNTQKEuDvQDMA
      jUOBMAzRarX6ROP+++A/+SSCp58ZPtAwkP/gB2AuLcGIY1xzzTVCsl9cXBwIiTRNUzi+eEs9
      OZxxmjdCFpCJh8xylIFM8fjkMAZ2agKNciaSVjE3Nyc0vUuXLgnzkMxEiAFRvZ2kXgTTBjPj
      M9J0ffLrLw0Qf44vPnUO999xEnde388Ep7o/xFTpPQA7vqJphWYAVxkkVWZx3JFTU9SHMU2U
      fukX4X7+L+D99RdEnwFjcQHFn/gJ2G+6VxAMqpcvg0uYPO1etejz+bxwXPKyy9O8QQhkcuFJ
      WpQoRsySawhZ56Xb7aJWq4nqlHEco16vI5/Pi0zupHcxiSSrw45cLoder4cbTtTw1EsrI4+/
      7ngNXhDiqbNXEo+JY+Cpsyu447rFgcx5zrxpXqk2EDe/0gtIGGYAACAASURBVPvlwtBRfQ+a
      AVxlUHRHFvASxzxTMf++9yL/3vcgunIFhuPAXFgQx1JtoCTIEj6/l/wdxVlTGB1pDGQGOaqb
      IAt4JVX6n3wAhtEv8ra2tobl5eWBRLK0OHh6R81mU0QRARDhitzURu+DMphngfgDOzkF991+
      Ep/5xsuJTmAAyFkmHrvnNIIwguul+wuaHU9UTaW1zRP5aL45kafIMEr8y+fzou4WJRYeNVOc
      ZgBXGRS7PS5okZHdPp/Pwzh2rF+TZXVVxLePE+LLzQ2qsEjaFDxzlbpWkR16VPbqUQWFXHqe
      h06nI+LUyUSwsbGB5eXlsUxkZHsmzaJerwPoS73NZhOtVmugnWccxygWiyiVSlM1t6OQz+dx
      zVIFP/XYbfjjv3kOUTTsW7FMA//oR27H0nZ28LH5Ejbbw/0gCNce61fIpVBrnhNABJ2D1n6l
      UhE1vGi/UOE/z/PEXqS+zYf9PWkGcIRAEqDneSI8jgqREYEuFosoFotCIlXVlVGBS/xEbFTH
      yMfR5x1qRs9MSblcTqjQRx0UFkpZt7ycA9CPVafYczqekGRSo0qiQJ8ZUB0jyh8olUqiwimF
      Lc5CgTIZpGU+/pbrMVfO48++9gNh3zcNAycXy/ixB8/gvttPwnEc+L6P97ztRrx4YVPJLBaq
      Bdx3x0kAO3vKdV2Ri0FaVq/XE2ZPMvNRKLTrukLi52ZZEoi63S7q9boo1DfqnanqTR0ENAM4
      QgiCAGfPnsXx48fFApOJq2ma6PV62Nraguu6AyUNVMSJIBOsUc5LlXOSn0vhpZSlOg1EyzRN
      0RiGHL7Ul5jXc5I1KXlu6XMqPUFVPUmr4HWIiOF3u13Mz89PxTyOC8rnME0T991xEvfefAyr
      Wx1stjzMVfJYqheRz/WLGFLY8ptuOYZ/8NDN+MTfnYUX7JiNlupF/MJ77sJ8pSD6GFB5cApz
      pncm95egbm22vVN0rtfrDXSE48EVnufB9/2BkFbV+4uiSGgUB52UqzOBjxCIsFPSEI83B/rE
      ZXV1VYQGchsmPyaJsMtEnEu4RJiyFMlSnUMb+KD61e4nwjDE97//fVE5NZ/Pp25ceT7obzKl
      kf04bV6jKMLi4uJUaFO7Ba1LisYihywRZF6mgyqkvr7WwvdeXsNmu4fTy1XcfeMyqiUHxWIR
      lmWh0WiIvs69Xi9zghjfK2EYii5i9Hm73R7KM6Dy4LKGTYzialTh1RrAEQIlHVGHL2BQciep
      lMo38O9lIqSy8fPj6TjekSqN+Kv8B7yGPTWlIdvoUQaVxaD5DoIAGxsbqFQqAwl7BNVcAoOO
      XWrgkwQtpO0wTZoLaupCTMG2bWF3J2J6vW3j9FJVnE/mJBJuiEiTCW+csbiuK/YkaWpUvkK1
      T8IwxNbWlgia6HQ6CMNQCHMkrFH2/UFoe0d7J84YLMtCpVIRNctlgrG5uYlarTaWHZrA4/5V
      2gK3T/Lv+ULnx3MJiX9GG/Wo4/jx4yISiiK5qJFLHPdLUpOGQCG+qvmxLEvMCTEJ7mynOT5q
      lVkPAlQojhNeYgKkUVGpDqpMKke28cz2LASX7xM5gIPuQSadpPMppDhJkKPkNM0ANAZAC5Z6
      3MoIgkA0GVEhzQfA1Wf5nmLjRBGilVWEly/BmJuDdeoUDEa45PPk/6eJgNFmp43OmUAQBKI3
      QavVEvkXXIOi+aCy21SsjrqJEYgB8CQzjUFQJjZpA9ymHgSB0Mq4fT/NtMl9WHJ4M/UNoPty
      UKVR7hOi+zmOIwrTUQ/nJAIvMxbqLif7kyYBzQCOIIrFInzfH3I+URgid8QCO5JnFvMNXYuf
      ZxhGv8fAf/tTBE8+1W8uYxiwrr8OhQ9/CNYNNwxIq7Th+PjoutMg/QM7WdFEaAzDENI/JyZE
      zFUbl6qNOo6Dy5cvo1gsDpl6uPlIMwA1aF3R2uJMk/9PrUJJe3YcRzALMk3ato1msynei0zk
      03xYvIcA5esAGGiN2e120ev10Ol0Ep3CMuhcark5ST+QdgIfUbiui/Z2q0jTNIE4RnTlCqIL
      F2AuH4N5+hoAO3Z4CifM5XIi3jzNVESbxLZtII7R/o3fRPjyK0PjMCoVVH7tfwUWFxBFkaiJ
      QxVGORzHyVyA6yig0WgIxx/XoHieBDkZVc+8vr4uWkcSgbpw4QIWFxcHslPpPc1iDsCkwZko
      OX55LaWtrS20220sLy/vKY6fM2xueorjeCBnIGtYr+d5ooXpJN//dIhjMwjHcXbMQL6P7kf/
      BP7ffb3f/cswkHv721D8mZ9GbFnY2NgAACwsLKDRaAxdS45Moc+EFPuNbyiJPwDErRZ6n/0s
      iv/kH4vQuK2trSFplcLgpol4FYtFkUlKkJ+b+tlSmWhODGS/CjHnarUKz/OE+YHexdramohF
      19gd+Lsi/wD/vFwui+Y6MpI0ZRXkNqP8HOr/QCahLAyANJEgCIbKUOwFmgEcURAh6Ha78L76
      Nfhf+9udL+MY/je+CfPUKTjvelzUmgEg7I9cYiVpJSmLN4n4D3wf93vmuq47tFEofn6aiD+A
      obR/7uSluSUnZa/XE5Uli8WimCO56B7ZqtfX1wfsxNTJLIsJbZTDX6MPlU09bX6pxzG9MznB
      S75WEATodrtDBfvIfDgOEafzJ21C1QzgCINMP/4T31F+Hzz9NPLvftfAoqnVatjY2BBEOYmI
      DYR8jugBYOR2Koiq7NTTJvkDOyUE5KgeAENMlDJH5+fnRehiFEVwXRcrKyuYn58XjkVKSFrY
      ruckz+eoulFxHAv78rTN+WEAZf0SEyBBirqQcXieJ/wOkyLc2gmsMQjDAKwEp5AiDd5xHCws
      LCAMQ2xu9mun12q1oWgH/rd9043whq60A+vMGRimiUiRzMS1j2kCpfunbUiKAqKSGEBfayDm
      aprmgEkujmMRsthutwfeyShHPsF1XVFKQvv29gZuGqUSIDxMl7RnigiTQceS8/YwYnbTCqcA
      JL3n3nSv8nv77rtSz11cXMTCwgK2ttTNNmiR2/feC/uO29XHzNWRf/ydifbRaS0XzUM1gR1z
      gsxEKQtattvHcb9uEzkbe70eWq0WPM8TPYGpNhBdSxVZxUGd4siJr7E7UL5Ko9FAq9US2hrX
      jvm7ViX/ATvaWpJp9DBAM4AjDLJDOg8/jNzDD/W1gf4XyD1wP/LveIdy0XHn1ECcv/S9MOkY
      Bkq/9Iv9e5hm/z6mCevmMyj/z/8SxrZpg8ak8iNME0iqy/p8qvkgiTEMQ6yuroqIkOPHj8M0
      TcEMkq4lj4ea0xN04tjuQMS/3W6LWlYbGxuiN0MSVBoA7YUgCNBut4eEhkmBmgrtBjoM9IiD
      wsrCMER4/jyiy1dgnjgB89RJmKaJbreLYrE4kJnInb5x3K/tTw6pcrk8YHumhS0Iu+siWl2D
      MVeHud3AhK4n28ENw5hKE5Dv+9ja2kpMzOH5F61WSzSFp2OJ+fZ6vYFqoNTAnkwNtm0PNaCR
      I1SoTScRF7p3pVKZydadewEx9k6nM+DP4vkwSaB6RBQ6GsexiL4jqDTBSY17nCZEdE4QBJoB
      TANIaqEIH2An2odslNx5KBNqIt4bGxuYn58XBCaLVC8nnPHrUqvJaStg1uv1cPHiRWHGkcGT
      h8IwFE5ZsvEDEBIld9YGQSDyBlZXV3Hs2DEx97ZtDyUOxXGMra2tIbt0HMdYWFiYunnfT0RR
      hGazCQAD5jOVcz8NlOvCy1PQuaZpDvTiniRUOT1JoOQ3wzC0E3gaYBgG8vm8qCFC0Slc8uZE
      XeVMpMW5tbWlbB0JYIjQy9eRSx0cte5IWUFVHUliBAYL4JFjl+rRuK4rHO5U+MtxHME8uARH
      pqXjx48L5i1rEAQhxUmf77bJ0CyDMoSBHcGH5lG17pNAgpjKaU8C2X68m3H2WafTgWmaKJVK
      mgFMEygyJWy14H3lqwifew7RxiaMUgn2G+6E8+ijMCvloeQUWpi2bQ9ImEnJMDwCQuX4JExD
      6WcVqKKk67riGTlxINNLs9kUZgEyxTWbTZTL5aFS2xRpQlFCAESnsKR4cWKy/H3y+2tkQxzH
      AzZ+meDzvArVZwQuBMifESgD+GruC25W1AxgShAEQb9V3auvovP//h5iyf4YvvQSvC9/BaVf
      +SVYN94ozAZbW1sioWV1dRVLS0siRFEuX8z/TrOJ0uaYNts/gZK5qBkMfca/B/oMlCJEyPZb
      LpdFhy/OYGWpnfd0SINt26IcBc87GAWdLLYj9buuO+AjS5LQ5Sgg+oyb4Eah1+shCIJUxr7f
      GAhGuCoj0JgoKCkp2thA53d+d4j4i+O2ttD53X+PeG1N9DGt1Wool8vCQSWbiLgKyxf7QJSQ
      AuPWVz9qoB7BZHNPmw8K3yT1v16vY21tbejYTqcjnPCq8sWq66rCUZPmncYJILFc8TSD5qvb
      7aLRaGBzc3Oo+iowHNJLv/vamYW1Zg9P/OAyvv3CZaw2ejDH7HERBAG2trb2FKpLCX+qSLFx
      ML07dIYgJJnPfBaxotYPR9xsovepT6P4T38WwKC0I3emIrMEr01O2gERE5UUYxizUa+GtACu
      LfHwTlWJbCIm5XIZzWYTlUpFzGe328XCwgIADLQnTEKn0xliInJCnwxiQnKVy2kGMWnXdYWp
      R6Xd8uMJXJtrdX386ZdfwJeePidyLA0DeOCOU/jpd9yOatEZmanN0e12RdG/cUFaaLvdFuVD
      dqPRaQ1gChAEAWLPg//009mOf+55gLWvI8mVMlBXVlZEBAOvGcTNFKZpJlZLnJUyBNS4nf7m
      zLDdbgtTjMpPQnO0sbGBZrOJjY0NUTWUYsdHxfGT9Mevn2b+mWazXBoowof30EgyYaq0OMMw
      EMUx/vDz38XfPHVuIME+joG/ffYCfufPn4QfRGOte4oU2m2+hmEYwp4/DuPh0AxgChDHMeJW
      G3G3N/pgAPHGBmLXFU5JWvSO42B5eRnLy8vCRKBKFKN78qiGUqmEcrks4s9ngQGQExYYNI/R
      dxReTXNIoOSvQqGAxcVFVKtV5PP5saNDVM1/ZkmyzwoywclMOE36l01A3/nBFTzxwuXEezx3
      bh1f+97rY617Mt3uxRxHTv/d+hM0A5gCGIYB5Gwg6yLI5YBtM4DjOGi32wOp6iQprqysJOYP
      0N/lchm1Wk2EoU5r5M8oZGnYQvNCsf5krqFNzEs/8OOTQBFAdN9ZlO6zYJwM3CTG8ML5DYyS
      07//2vpY46J77WeW8ChoBjAFME0TRqUC69TJTMdb118HYzsxiZrMG4YhGpwA/UzStATBXC6H
      +fn5oRr3swZeT56byFzXFXNJFT4p65r6BPM5I/8L0J/bLLZhXoSMNI5ZfQ9pSNOs5ETGpPm7
      tNEeeZ/VRnq5CNV9yc/WarV2Xc5hL9AMYApAbeLy73jHTj2gJBgGnEcfFccR0SoUCigWi0IK
      JclkbW2NnboTHVGtVq96PPNhgGwiI43JcRzRNH5zcxPNZhPr630JkRrnEIgxhGGIarWKSqUy
      0pkL9N/dwsICqtUq5ubmtPknAVkS4zgjUM37tcvVoc9k3HC8Nta4eMBFFEV7jujZDTQDmAKY
      ptkPu7z3Hjg//FjygYYB55GHkXvLm5XmnFarJSRPz/NESrvKvj3rhJ/AM54pYookuzAMsbGx
      gVqthoWFBczPz4tQWyI4FJpo2zZ831dm9qbdm969fifJIFPZKKTN39tvOwEnl2xitU0Db7vt
      ROL3/H3L99utE3gS0EbDKQGVgcA//AmYy8tw/+IvB/IBjIUF5N/1OJwfegQwTcRStiJF+VBh
      OaovVKv1pRqSoORFPOswjH5FVmoNyR2HS0tLAAZNEHJpAKBvyvF9H5VKJVMSl8Z4IEapYgJZ
      mGYURbj+eA0ffPAM/vQrP0Ck6LPxrrfegNuvXUjdG7IAxdcFCRAHDV0MbopAUQWe5yHudhFe
      vox4qwGjWoF16hSwHTWiWqQUJWGaJoIgwNraGpaXl8WxvHSBZVmJjc5nEVRI79y5czh58iQM
      w0Cz2cTc3NzAcRQ1BfQ3fK/XE+Ygmns9r5MHJU3txcZuGAZgGHjq7BX82VdfxPnVJuIYOLVU
      wfvvuwlvv/0ELNNMTO7iNn+V5E+f1ev1A80Q1gxgykAhb81mE0EQCLswD4UbaPe4DU6YNjc3
      RRVPbv6hWHey/2vsIIoirK+vCw2qXq8DGCwlzJnv5uYmSqUSXNdFrVYbKPWsGcDkEYZhYuOj
      rKD3GMWAH4SIohh5x4Zp9IWiYrE40OGNwGtmcUYgXxsA5ubmDrSQnzYBTRn4QuOVPSm00zAM
      xGEIQzLp0AK8dOmSaOBOxIqIUj6fHyoYp9EHNW2X4/056N2EYSg0LZpLudSzxmRBjmDZlzUO
      +F5xbHrPMaKoX+a73e5HClmWNfDuZYlfDgAYLDVxsG5ZzQCmEEEQCGciz+CN19bQ/dSnEZ47
      B7M+B+eRh2Hfc7eIbw7DUDgp19bWRE35OO7XvdeaYjqoQigvDsYZKX3G6wgVi0XkcjkdwXMA
      IGcwabu7ZbhceyaiTQJAo9FAtVoVfRqA4bLpXBOQc28OGpoBTCGolACFEpqmiWhlBe3f+L8Q
      bze9iM6/juDZZ1H40E/BeexRhGGIbrcrqhRSDXvKUuVZrRpq2LYNx3FE5BQwLO0REygWi4jj
      WHT90vO6v6A8CbmVZ5YqnkScSRji4ZrUCYxq7FNTH7puksmHX5vGcTU0QB0GOoWwbRu5XA5B
      EOwkJn3ik4L4C8Qx/L//+4GIBFKTc7kc5ubm0Gg0rkp0wlGFbdtDG15VgoCih7Q/5eDA1zhP
      oFOBCHupVEK9XkelUhHlTur1umjS43kewjCE7/toNpswmSM4LSKIJw7Sz9WIANMawBSCbMu8
      W1XwgxeVx0avX0Ds+4i3Cb9MrHK53EC2q0Y6eNlnYDjSg+aQd/rSOBjI0niSZF6tVhMLHQKD
      hf/a7baQ+GUH/jj5HJSNf9DQDGAKQcWliHDHcQyzVkO43ZZwAIU8YFmItzuC8ZjpOI5RqVSu
      2uI8iigUCkPhhtQUhkpvkIam5/TgEMexcNJypuw4jghxpveT1R/jOI5oKMOz6Am0h5Iiu2gc
      XMg6aGgGMGWgzFIK+aSa/bkHH0D42mtDx9u33AJsS6a1Wg2O4wyUIp6V0s6TAvVW5vX85YQf
      jYOHYfRLJ3c6HRGFRQ743b4TwzAEAyE/Qa/XG2lekrGfwRVpfTsAzQCmDkEQCJskSRVRFMF5
      5GFEly7B+/JXAGpecvo08o8/LhYJMY1qdafuiSZY44EIga7Mefhg2/bE1zaFRVN/aN5cfhQo
      Imw/1wr1QqhUKsr76ESwKUOr1YLneVhfXxdFxSjCwAAQXb6M6MJFGHN1WNdcA+TzA+0MaZNo
      AqahkQ1xHAu/G2WByw19kphNsVhEsVjc1/G5roswDIeKEAJaA5gqUEVBkkIcxxEOSfptnjgB
      88RO0SrKF9C1fjQ0dgcKluD/899pOAhBy3EcdDodtNvtoTLjmgFMEXzfFwScO4A5QZc7I8nE
      ftqbuWto7DdKpZIo702C15DkvZ1XMMkQYNrLnucN0AISAMMwFG0xqQS83ulTBFpovPKhvMAo
      OYUWJI+NdhxHqSZqaGhkh2VZqNVqohFQGIYol8vi/1KpNPEoMDJDdbtd+EGIi2stvLbSRBBE
      OLFQxg0n6nBsU2SqU5VfzQCmCBTO5nneQL9YOfaZV/WkWPRxIxc0NDSSYZqmaJFKsG1737q2
      BUGATqeD16408JEvPIfvv7YGrtyfXCzjgw/ejPvvOClqegGaAUwVSNrY2trCsWPHxELjNUlU
      iV4aGhr7A17nn5uCXNdFPp+fyD2iKEK328VLFzfxmx/7Ntq94f7CF9fa+P1PP42ttod3v/V6
      USpGpyFOEaj0A6mX3AbICT9J+7oEgYbG/oNMsr7vi9+TzAB3XRc9L8Dvf/oZJfEnhFGM//bl
      53F+tYVer9enDRMbhcZVB8UVq2r9EzOgZi61Wg3lcvkqjVRDY7ZA8fhbW1toNpsT6/9LiZ9P
      vngFF9ZaI4/3gwh/8e1XROi3ZgBTAkrmchxHlCKghBSe6k4SiGwO0tDQ2D/kcrmBRkyTirSj
      ff3cufXM53z/tXWE21FBmgFMCbhzl2yL/DMyA1GWsIaGxsGB1/s3TXOiDABAqulHRtcLEMf9
      c7UTeIpQKBR2egJv2/4JvAplqVTSVSg1NA4YpVIJQH+fTmr/0b6er2Sv5rBQKcCkPtQTGYXG
      VQc5fynxxHXdgdrzhKvRdk5DQ6O/R6nh0qTMr5T3c+f1C8h6xTfeuAjT7PsLNSWYElAZCKAf
      DeR53lBNeqpeqKGhcXUwad8bhXLfddMybr12YeTx1aKDd775+p1WlhMbicZVQxzHCMNQ/C4U
      CqLAFC22YrGIubk5XeZBQ2PKYNs2DAD/8oNvwmP3XAszgb/cdnoev/qht2J5riwy/nU10CkA
      9SEl88/6+joWFhYGOiBVq1Ut/WtoTCGiKBJafxAEeO7cOr7w96/h1StNRFGM4/MlPHDnKdx3
      +0nkHRulUknkAGkGMAWgOiCNRgMAsLa2hqWlJRH2SfkBhUJh31LRNTQ0rh7iOBZ+P8/zhvp4
      k6kon88P+AC1PWBKQGWdW60WHMcRkj+Ff8ZxjF6vh3w+rxmAhsaUwTAMsbepMQ0vQcHrfXFo
      BjAFoJdNDib5RRMz0MRfQ2N6wfsQZPX1aSfwFMA0TdEEptfroVwuDxD6MAxRKpV0qWeNXYHM
      CxRooDE90AxgCkBOoG63i0qlMlTxk0rTauKvsVtQuWHNAKYLmgFMAcjBCwBLS0tDPUb3u+eo
      xnTDMAyUSiVUKhWdRDhl0D6AKQBJ+YVCAa+++ipKpZJgCJQToKV/jb1Ar5/phGYAUwLHcVAo
      FBAEgWg2QX6BUZs3CAJROdRxHL3ZNTRmBFqfmxJQ+Fc+n4fv+2i1Wuh0Omi1WkMxwTJ830ev
      1xt5nIaGxnRBawBTBMr8XVhYEMlfvV4PnU4HlUol8bxisTiUIKKhoTH90Dt+SkAagGmasCxL
      xAFnbT+nib+GxuxB7/opA2X9AhBlZ7vdrg7f09DQGIJmAFMECtfL5/OiPpBhGKIf6dWy8ZNP
      QvsYNDQOF7QPYIpAZqBcLgegH91jWRaCIBDlIMhRfJCwbVu0o9SmJg2NwwPNAKYQpAmQBmDb
      tiC8V6Mk9Di1STQ0NA4OeldOMWzbFtE/co9gDQ0NDc0Aphy8QqCGhoYGhxYJNTQ0NGYUmgFo
      aGhozCg0A9DQ0NCYUWgGoKGhoTGj0AxAQ0NDY0ahGYCGhobGjEIzAA0NDY0ZhWYAGhoaGjMK
      zQA0NDQ0ZhSaAWhoaGjMKDQD0BCgjmIaGhqzAc0ANAD0iX+n07naw9DQ0DhAaAagAd/3AQCl
      UkkXjdPQmCFoBqAhGrYAO2YgaiKjoaExvdDloDVE20jXdeF5HgqFAuI4hmVZV3toGhoa+wjN
      AGYYURTBMAx4ngfP8xCGIcrlsujepc1BGhrTDc0AZhBxHMP3fdEzuN1uwzRNFAoFuK4regpr
      aGhMNzQDmEH4vo9ut4tCoYBut4tSqSQaxR90w3gNDY2rB+0EnkFYloVcLod2uw3LspDP52EY
      hvjR0DjsCMPwag9hKqAZwAwhiiJEUYQwDNHtdgEA5XJZE32NIwHf99Hr9QD017LG3qFNQDOE
      KIoQx7HYRJZlCUewZgLThziOEUURgiAQ79lxHJjm0ZD7KAyZ1qZlWSJoIYoimKYJ0zSVa5f7
      uQCgWCzqNa6AZgAzBNM0sbW1hTAMha2fHMEa04UwDNHr9eC67sDnvu+jVCodiXfO1yYJKb1e
      D57niWNs20Y+n0culxtgbK7rDmS2x3GcOdExjmOEYSgYDn3W7XaFEBVFERzHgWEYiONY3P+o
      MFeCZgAzAN/3YVkWXNcVkmCpVEIURQNJYBpHH2EYwjRNYS4hAkUg6blWqx34eyezjWmaA2Py
      fR+u68IwDFiWhTAMxdjIZJnL5eD7/pDpJwgCBEEAwzBg27YwaVJ2O8F1XYRhiGq1mvjcYRjC
      930YhoFOpwPbtlGpVGAYBlzXFZozodvtIo5jGIaBbrcLwzCQy+Vg2zZs2xbayWHeX5oBTDmi
      KEKv14Nt2+j1ekISSlOfNY4eiKCS5E+MXVXgz3EceJ4Hx3EAHEy+BxFy+pE1E3oGOSOdCKjq
      ePlc3/fRaDRgGIbSSWyapvicrktaRrfbhed5A2YnYqKWZQ1oHfyefNyUTOm6rvisWCwiDEMU
      CoVDGV5tdLvduFAoXO1xaOwTaGGT6mrbdqoUpHE00e12YVkWLMtCq9UShE5VzoOIk2maqFQq
      iKIIuVxOMIxJSq1kLmk2mwPEN+34UcfsBoVCQWgLBEp49H0fcRwPaCb8/mlj4t+l/V0ul4XZ
      9TDtPa0BTDlM00SpVBKx/xTyqTEdIGmaGEAulxMmES5RA4MSK/00m01B/EzTFBIxmTHItBJF
      ESzLymzjpnpSrusKAptl3e3X2pTNNwAEM+AML0lrSgIfb9LY6fPNzU2Uy2WheR0GaAYw5eDO
      XlJTs25GjcOLIAjQ6/UQBAHCMBS2cf5uOTHjRI7s7ETkSPIlgkjXk80e1Wp1JAMgZykR3P2S
      6OV7EiapuXCMc13OQGjuySFNvoWkeTzovakZwIyAFhyv9nkYbZIa6YjjWDgkubOU/DlkcpFt
      6by4H0n8/JpZ4Pv+yDVD2ggwKFnvN1Tazl7uzcc+yaq4URSh0+nAsixxXdu24TgO4jhGu91G
      sVg8sCgtzQCmEFEUicgfsnOS/ZXC6Ch0TuPwIIoiUZepXC4PfR8EATqdDjzPGzI9cEmfPqN3
      rnL2c+JGMfWq63CMWi/EnK4GJi057/VaaefLmlUul4PrurBtW5jNDipvQTOAKUMcx2g0GgjD
      UEgSFF5HEgclB1HIoDYHHQ5QGKLjOEppmxz6o94Xd0ldxAAAGH5JREFUN/UkOSaznM8xisBS
      gqEcfXMQJiC6Pje9cAan+jttfEnXGmcs44BCVuk3mfYKhYLwwezX/GkGMGUgwkEhablcDt1u
      d2Bjkgmo1WoNlH/WuLqgZCIKR+Rluclsk2RWUREwDh4/Lx/LzQ1JhCYtg5g0E4qhV2kX9D8n
      qpMkauTHILOYyvmdBpk5qMJRDxK0P4E+Iy8WiyJSa5I4WmlrGkoEQSCSUnisM21A3/eF0092
      Th21zMXDCLLrTsJWTNcIggCNRgPtdhvtdlvE948TocLt/+Ocl3Qt2W9AkirFvsug9UU5APu1
      5rjZS8UkRwU+yPuCX/cwaMdhGKLVau1L/SMt+k0BiMADfYdSoVBAp9MRph7ahMCghKcrKu7A
      dd2B1H5gZ65IqqSMVACiZaYslREx4VKvTIzIzMOlzDAMBxKR6DN6R2SyG4cojdIUsqJWqw19
      1u12hbNXNrPI9+OmKNUxk8KkCLZKGzgMjKDb7U68eKNmAFMASuSjhZHL5VAsFoXDsFgsot1u
      Axi0eXLGMO2aABFPinUnGyuBYrNd1xVSpG3biONYRG14nodqtQrLstDr9dDtdgVDIH8K0Hfy
      1Wo1kQBVqVQGoq6CIBBRH71eT0j2KnCNYBx/jcoMtFtQZmulUhFj4cJDmv08aWz7gSQpP4kZ
      q8azV/v/foKCNzqdDqrVqsjN2MsYNQM44ojjfgp8q9WC4zgieoSSb/hGlIk9dzpOG2izk7+D
      CDQ9qypqhkIlKZadqmgSDMNAo9FAPp8XdXY4ISQmm8/nByR4SsIrlUpwHEck5pEJBcCQhiZX
      aZXHyZ+TR/HsZp748/G5I8hd4ii5K+l6fO7l69K8jApzTBqLfE0+b0nPn4UZXm1Cn+a85qAK
      p1tbW+IY6unBtcqs0AzgiMP3fXQ6HeTzeRSLRbExiZjxbEci/HyRkDQ6baCwOiqNEMexYI6y
      tkNElByZ/HP6ze3XlNSTpDV5nicYMICBJCCK4uH1YmQiL9us5d97ieZRHSOHf6aFgPIEsVE2
      dW4Oo7lLikpSmZF4PoPqHlkgz13S96M+228kmdBkkOBBc0MCDpkkx8301wzgiCOXy6Fer4uF
      4LqusCXTApEJivz3USgNnBWdTge5XE5kotbrdeEYJyJPkjsn0iS9c8j+EiL4cjVLFVTfk7bG
      v+fEj9+PVPs00xCds9f3N+pZqOQysMOc0sCZCgfPVua/+fGjCKF83WkzXcoVU2Vinjb35Pcb
      J4dAM4B9huwUnDSImFGkCABh2+cLyLbtgUggWa2+2irwpGAYhpD4AQyEwFKkFBFzz/NE7RwZ
      MnGikEzZ/LLbeVNJ2lzLSCP+k3xX1CWOagGptAuKRweGAwdUTl/+ORdEuIlNvoes8aRFvEzS
      v3EYkfZ+5e9kIY9yMbJWH9UMYB/g+76owGlZ1kByz35V4iQnZ7FYhGma6Ha7IjSPioQ1m80h
      h9e0ZQMTsSKzi6oIGJ+DtEJlKjMMfb5XyNqYTDBVUVuq8Y06Jss4VE5QDm7+Uc2nKpBAdR36
      XxaGiAnJDVjoOrMCWVAcx8QnM2jS2EZBM4B9ALdhEoEhKavX66FYLE70fqZpol6vi43Im2tw
      qUuWXoG+VOw4zlSZgbhErzJ9qbQxFVFPI/rj2qaTGIz8PWkogLqEA19L8nVGEYwkR6M8H/w6
      XPPhWqYMVaQNZy4yY6PvZQ2BPlf5q64mVO9q1LGqdqtZiXqSCVH1v2xCI4dwFmgGsA9wHEeE
      +VGSDC1+27bhuq7g0HyzE8Zd9LQATNNEs9kU96OaMrZto91uK6+71zCyqwlSe3mRs263O+DI
      lR2c9BnHJJ9fvlaaJJ9kAqLvZLs4Py+rzVx1v1HzwUFhs51OR2n+kf0XaQyQ30dmBLQOs4wp
      y/eTRtb7jUPsd3OuTPT5Z6ZpitLdWaEZwIRAG6HVaolkLMMwUCgUhtQxvknCMBSROK1WS4QK
      jroPB0UAUAs70jBIgpRL+/JFxO9/1MDngcI2VeGJsvYjn6vyicjHZIXq3HGvk+YvUm38ca/P
      mdIoPwYJLJNOGpTvOS3OXM4UuVY0CaiYrHxtMjNnhWYAEwJJ9RSSRQlF9IKKxeJAbReye9Jm
      bLfbQkNI29jtdltEZdAGJqm3Wq2KnqTATtSJXKaAziO/ASU0HTVNgBiY67qJxJ8fmwbuNJel
      1d0gyd6dBpVUn2Y6kv0H49wn63HUi3fUtXYzBlU00GHFOCZAHvihCrrYC7j2x+ePa/Lj1PbS
      DGBCIAm6VCqJaBuSrgGg2WwK9UwmwBSvbxgGtra2kMvlEIbhUKE2knI9zxMx7sCO84hqrnAn
      NK8ZL4M0lKNqBhpll6ZjkqJbCDIRncRc0DVVduA0ZCXqWU0v8jkARs4HP563l0wbx6hrqc6T
      y1AfVtBYgfSEM/qezuG/d3tfft20NWWaJqrVqlLbTcNMMwCazEk4QGWnFUnorVZrqNwrHUfH
      EvGnMZG5ptFoiLIORKSJoHc6HQRBgHK5jGKxKMoJUIYgH0safN9X1p4/bCCGyRmiXJIgDUkS
      p2rD7EVi24vpRx4nH+uoa+/G3qyaD9mvMmp+ZeIvz51MOPnzyNoRL9cxCuP4MSaBtMABujfP
      FdmPcal8LqSlkcnZMHYa3WfBTDMAoN+nM4oilMtlRFEkmmRT7RYy7YzzInu93oDZRbUYVC+T
      f0fwPE/Eq/Mqn1R6l8wfwA6DSSMUSfbuw4447sc4Uz0aAKJvLcX0q6CaC06IVIQrSUvYDfbi
      CKRx7ddY0uZjXKRFrXDJFRgWlpLGl3QfnreQdO+s4NJ00hzs5R3uhQFkWYe5XG6oudM4od3T
      4XnZA0zTFBNIxcF6vR5M0xT2c0rb55mjSaDMXJ6MRVBJmkmQbX2e5w30ceXaQxpkWyH9pusf
      FecvMTwOwzDGcngRaE5k6XQStv+jCG63ziqBq64BDJtA5DlNM0dyop71fnvFuCYTGaP8NfuN
      rAlfSZh5DYBzUCqqRtoAgdQpSi6q1Woj7YA89p6OlUMC0zYDkJwyvxcJUCZ6FEF02Amf4zgD
      zI6Ys23bqU7KJHBb+6wSfmCQ+APjS6yy0zPJni8zliw+Dn4uxySjaybx3lW+lYOC7/t7aug0
      8wyAnLYUSUNRPKpYWllSSkO5XBZEipA11l8lqau+H3WdtOvSueVy+UiE4BmGgVKpJP6nHgi7
      CU+UJX7ZVEF/zwJU0nlWgSCJccqChuraqvNk52baOCb1fmR7+iSut98wjH7GfxzHe9bgZ54B
      bGxsiPK0sqQO7IQa9no9UWhpFMEkDYBH/CQdR+BSGK/TrzpnHImdm5H4Pcl2fhSIP4ETBt48
      JY1gyO+Sb3Z+Hpcq6W9VYS4Vg5A/41Usk96T6p3Imp/8THIGsOqadB3VXCTdU75/1rWVxCyT
      1meadMxt+yozUlbBK8uY08adBvn97mYssuYp3zdpXfF7WpYlCP9e9+/MM4BRFR7jOBZSvGVZ
      ojGIaZoDYZiu6w7Y/EulkkgIo85JKsgSkVwFkBYLXZt/nzVaQgYtolKpdCQlXZprQhbioPIf
      EJI0szSGIps7VEQqqxQ9zlizIKn/77jjGPecUdrTqHvIZlNV4bi9rleZcMv7Q/W+Zec1Z8RZ
      GQHfszLxH3edcO11r5h5BkALIEvxLerNSbAsSziLZdB1xjFREKGXXy7fDFx64L+55KoaB7/+
      UY77B3bmlDNH+j8NWZ85SRIFMPS5SsPbDdFNOyern4IkxazMcBLStDzG3YJL13wtq97BXpD2
      rpIkcrnP8DjEl+9p+j9JqEi7Ln2ez+fHjkpMg2YACZs4C9Js0Kom2aPGQT9ZYnhVCzlN7eca
      BnUQOuxMgMZO7RCp3rlcV36vxC7JhCNrYSofkDznSWtpHO1E9gHxe2ZhFGmYFPHn4xz1+Tj3
      UoWIylnae4Us0SeZWvj4uemIzhlnLPwaXJiT7686hzMQXuFXawATwF7a6QFq+11WRyLf6HR8
      kg1QPk8lkSQRHv5doVDI5Me4moiiSBTRyyLhp0VfqM6R35l8DDHgNPOMYRgiLFcu3yETi6zE
      n78nuV4PScX8mFHzkdWUJI81K3FLi+rZTa9pFYHlZk/52N3uWRWT4XuXzzU9SxpDGDVn/Fqq
      dyJr9/Jxsoa/m6i3JMw8A+B2xiyQOTfn0KMYyShnj+oe3JRE0oO8GLlEnETwKNx1N31DDxLU
      3EbVmjFNUxtXi+OMX3bayoyZj4MzVE6Q6XpZmb8s2cv344RTVT8/KRRyt++WZ8RnJa5p74Jr
      sUnPqCJynJiqMmvT7psFo55LZp6qXgX8OqPMO6pzVOOQr8HXmmwRmKTwNvMMgDZyVjsynSO/
      MFXc/6hr0P1kFV9FeCzLEnV+yPeguh6HYRiC8Nu2fegJf7fbVfabVZlE5GNU/2dBVmKSRmg5
      MxgVqSOD14PKauaQCYRqPsaZC3l+s56bpPEmSbGyNqO6lqzVJo11kmtZnjd5b6cJdlk09iwY
      NfdJTHSvmHkGAOxtQlWNrtMWgkzw5Revkv7pOE7E6RoUzgkMNxPP5/MDsfOHFWEYotFojJTu
      96L2E2QClPWa8jH8HfOqj+NksiaZBbKMZZLzAagbumQ9V7V25etkfVYewZQ2l6QdjGOyGgf8
      2VT3kM1Vo8ab9Z4qISJp7U0CM88AdrP5gGGOTcRXth9ypEn5MneXpV36jG9U27ZRq9XEfcls
      QsXljkKZhyiK0Gw2Uxf1pDd3Fgl7FGQCIRdRy4rdOPMOej5GQUUMk6TVURqGaZoiuEKltcoa
      wn5otfwZ0jQ6YkJc++Nj3Ov9CbKZSTOACSOOY5EMluVYYDgyhEuCquPpHBmqBU6RRWQWIBuk
      rEZTITiqBXLU2jpSWC3Pnxilau9V2kszIaVdW36P/DgiEkS4Rr2HJOYu30c1Rvnz/ZyPrOfK
      uREq8GdOCrwwDEMIL0lzyPdDWi/h3TwPP18eq+rZecXUpP2/m/vzYnf0PzdFTXKfH95QkAPE
      OJOqkjrkTcQZA98gWWy0smZBY1NJPJZljR1uehgQx/3KnlQqW56vLOfzv8fddKPsyzIRUb1D
      lSaXlFmtej4VoVcxhHGxm/P2KknLz01j4CG7/PpyNBOfF/JvJTETvleTKoKOOwfyXuXnZ4kI
      S4vyyQr+DrgzXmVR8H1/ILmUytfsBjOvAcgEdxzI56iaeSddP6sZQrb3yovb8zy4rotcLneo
      QzsJcRwPVFgdFyrJl8du71Ua5uMktV4mCknnZLk3l+bSrjXumPl8jFNXf68YJchkPT7r93SM
      yjSaZItP0wpk7SfpfWZ5/3uBLPmnjdcwjIEouSiK0Ov1kMvlBjoCZsHMM4BJQCW1c7OQinAn
      QfXCVQuYH9dutwHslLamnsCHEcSwCJOQnPZqBuEMNukee2EufH1kvcZuTDyysHC1MI5ZaTcd
      0/i1uQNedS3ZpzYKozS4SQgaSVCNO0lT5eOhzoNkguQ9M0Zh5hnAJF4kVwUJ8oKhz7JKOEmf
      53K5xGqlvF/AfoOStUzTzJxbEMfxgKqqmpfdqO+TkHTldyObevYC1XVVa0FlShwHXAK+WgxA
      NY+q5xjX5yF/L5ttkorIyfdK00qy+qH2A9ykKCeeqRBFEXzfh+M4KBQKKBQKu2L8M88ACFkn
      T7VByVQgb27ZuZn1+mnHOY6DcrksuL7rugNOY2pqs5/wPE80sedjGkWIabyTgGxTHgcy0Uki
      QjJjSjMfqPwGo8wKk8Re5yNNaldpoFkl/FFMTGXq5P/L95CJOWkBqrIOac867nfy50maSxLz
      GXU9+dmzvAMy/XL6oxnAmEh66eNyU3mR0qIclSmYBbwdZLvdhuM4KJVKoosZ9THI5/P7bvcl
      Gz7ZxqkYXrvdRqVSSd1cScR/LwRyL6YjQL2RsxI3OpYTr6QMWLoXXxNp0mjW+6edv5tz5Yxm
      Lmmrcl5U1+ACUNKY6DhuwiFzxqicBBUTkP/Oaq4ZNd8qTT7t+KSxqp5dNYfyd2n3yOVy6PV6
      QvMfx/RDmHkGoNr4QHqNINWi4MfxyIFxEzpUiyyfz6Pdbot7uq4L3/dRKpVEeYe0mP8oitBu
      tyfS/IVaUwKDkiZF86QxgKS+vbsFN3nsNQY7iRCMUsdl4qO6RpIJZNLaQJb+tqpxZAFnmEBy
      yPEof1XaffdqIh0lBavMK6r9mUScs4xB/m5UaKhMS5LWm+qzTqcDw+g3ddptV7DDHzayz1Cp
      Xlk2DX+p9HcURQjDUFlDPO1aSdclkIlFPm+UOYVs7ltbW7tSD1XXUzlwgdF2592GqY0az159
      HknqNi9LnGYW4EROJhp8fJy4HYSNfpx5URE+FSGnvyc59nGJLN+j8vdybabd3JO+58xknPfF
      50+ew7S5k9cR/4xDVReIuhnu5r3MvAYADDoS5ZevQloVxCxSvnz8qE3nui4KhQJM0xT9CKik
      c9oz8RILhUJhIgxARcgdx7kqkUcyYRqXGYySOLNIgknjkt8lSYLcxDFpjCIeWa8hM6002/So
      80eNRd5raRozQfavjKPFZM33UWkLWedUpYnJcyH/5mY20gQ4TaLzc7kcoihCLpdDsViEZVmi
      r/duoBnANmTJLamkLpDsCEuKAuKfZVHP5et3u13RBq5erw+ZllSgBvdxHKNcLk8kezBpU1Bo
      Z6VSSWRKVJROjv9XMcyk+U2aN5U2JkO+huqe/DvZDi7fV0Ukk5h5mqkviwChev60OeTHjJoP
      +R5JyGqWUI1Tdf0sz5B07SS7edr1iKiqzlMdy/eX3GEt67g5IZctDTJTlbVFed7ouzAMUSqV
      BiLv9tIUfuZNQFzFox+eeas6nv+dxTyggmoRJ9WFieNYZM2qKoHKIJt/HPfrBU2q+QuZtuRF
      S4xhlJknl8uhVCoNlPh1HGdoAasIPzfL8PHIm4bO4/Mvz3USUaJrEjhjT9rEqjot3ATB77Hb
      bmxJRFx+fm56lLtMpa1H1XyotAl+j6TkOD4evq9UoDU/rkYkv1uZ+QI7IdHyvKStC9Vz8P/5
      u08zMfFn4mtdNiXJhJ/Pl0pgI1PwJEu6z7wGoKr1ManJlcE3VJomwBc0jRGA8PjzTE/LskQt
      IILv++KYUqmEbrcLwzD2bKaJ41jUYJEjQkb1VfA8D71eD1EUiQqlFMJGiWxp4JtCZZJIkmjp
      mFEEgM6Ro3j4u+AOUC4l0jGcGcjp/IC60uU4a02WqLPMh8r0IDOoLARRJlZphJ1Xp500VNI6
      gZ7LsiwhVPC5HyWUpd1TphGTrruVJmzSu6ZM30li5hmAvKj3+15JxIeg2rh8Q/m+P9QRqF6v
      K8MPaeH0er2JVAal6ozcQcpBtkjVPKZFKiU9v0yAZag+l53vKsagkhhlAqkCZ3IyYedSn2we
      ovHQ3ySdqu6lInCyZpFEfGT7uayhjDMfScgirR/Ufho1f1yy3g1UAoL8/W6fkQsM8t+qcWR5
      N7vBzDOAg66gyTezKrog7SUn9SCWiYJt2wNmrFKphGazqawXxMcyCqrwT07s0qAi1J1OR5iE
      KMM5iSEnXV8l7fNzVRJr0mdJ0qVKbefnq5i5bPvlzIyblOTxqJ6P3ztNWlcxs1HzkVWqTxqf
      6hj+vKQxTooZqMar0ork8Y7DlFTzQtfIoi1leYak8auOpf05aekf0AxgpPStWgQyVMeprp+2
      gOgaco1xWZpUnSczMdu2Ua/XB77P5/NoNBqoVCoDNvcgCNBut1Gr1VKZQBz3E8BU4+BSblbQ
      8/EiVoZhiDBaKnfheV4mU4I8tyriqpJ2Ve9klGQnM01+XXlO5PEQVCaYNNAxaaa2pGeRx0D3
      5JInP0Y1pqT5TBsrb9qyG8jvR6W98HvKz78XYi2vFT4eeSzjPA+B+h0QeEdBfn2+t9ICU3aL
      mWcAqkXC/QJ8smnTkmTDNwVv7cfBTRI8uYxf3/d98YJVtmPVtej8pOxfeZE4jjMUgRPHsSgi
      NWqTUAJY2mYcV0IpFoviurynAdk7aZ47nc7Ia/GNMkqLSCLWRAx5xU5V9c4s883/Vzn/ZCfx
      KEEk7V6qz2WGoRJkuLbC13PS9eUAgFHaQlp0ikqQSbqnXG45i6Ym3yOJsKZBXjtyaGZWQqx6
      Vj43fD6TtELqlU0VACaFmWcA8otMktiBnRclM4ekEr90LbnEKz+XiBy/DhGIJAnENE0R159m
      d+ewLAuVSmWIQVF2bhAESnMYJbclEWF+33H7DtNzECOiaA0yddGmmxT4+1NpVyrCtpsIFUIW
      iVFFpPhYJyntyZDXs2rty2PajbbHIV+PR5aptIVRkUTj3Gu359L5ssaX9TrjaE1cM+XXME0T
      pVJpTyGfyvuur6/H+7nIDjv2Yss7LNjL+8uyScaZo72o+xoaGsnYDzr9/wM287PCW/t17gAA
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
